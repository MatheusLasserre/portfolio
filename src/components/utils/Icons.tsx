import { CSS_VARS, type CSS_VARS_OPTIONS } from './colors'

type IconProps = {
  width?: number
  onClick?: (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => void
  color?: CSS_VARS_OPTIONS
}

type IconToggle = {
  toggle?: boolean
}

export type UniversalIconProps = IconProps & {
  [key: string]: any
}

export const SettingsIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width='24'
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8809_15542)'>
      <path
        d='M12.0001 8.00061C11.209 8.00061 10.4356 8.23521 9.77784 8.67473C9.12005 9.11426 8.60736 9.73897 8.30461 10.4699C8.00186 11.2008 7.92264 12.005 8.07698 12.781C8.23132 13.5569 8.61229 14.2696 9.1717 14.829C9.73111 15.3884 10.4438 15.7694 11.2198 15.9238C11.9957 16.0781 12.8 15.9989 13.5309 15.6961C14.2618 15.3934 14.8865 14.8807 15.326 14.2229C15.7655 13.5651 16.0001 12.7917 16.0001 12.0006C16.0001 10.9397 15.5787 9.92233 14.8286 9.17218C14.0784 8.42204 13.061 8.00061 12.0001 8.00061ZM12.0001 14.0006C11.6046 14.0006 11.2179 13.8833 10.889 13.6635C10.5601 13.4438 10.3037 13.1314 10.1524 12.766C10.001 12.4005 9.96138 11.9984 10.0386 11.6104C10.1157 11.2225 10.3062 10.8661 10.5859 10.5864C10.8656 10.3067 11.222 10.1162 11.6099 10.039C11.9979 9.96187 12.4 10.0015 12.7655 10.1529C13.1309 10.3042 13.4433 10.5606 13.6631 10.8895C13.8828 11.2184 14.0001 11.605 14.0001 12.0006C14.0001 12.531 13.7894 13.0398 13.4143 13.4148C13.0393 13.7899 12.5306 14.0006 12.0001 14.0006Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M21.294 13.9L20.85 13.644C21.0499 12.5564 21.0499 11.4416 20.85 10.354L21.294 10.098C21.6355 9.90102 21.9348 9.63871 22.1748 9.32606C22.4149 9.01341 22.591 8.65654 22.6932 8.27582C22.7953 7.8951 22.8215 7.49799 22.7702 7.10716C22.7188 6.71633 22.591 6.33944 22.394 5.998C22.1971 5.65656 21.9348 5.35727 21.6221 5.1172C21.3095 4.87714 20.9526 4.70101 20.5719 4.59886C20.1911 4.49672 19.794 4.47056 19.4032 4.52189C19.0124 4.57321 18.6355 4.70102 18.294 4.898L17.849 5.155C17.0086 4.43692 16.0427 3.88025 15 3.513V3C15 2.20435 14.684 1.44129 14.1214 0.87868C13.5588 0.31607 12.7957 0 12 0C11.2044 0 10.4413 0.31607 9.87872 0.87868C9.31611 1.44129 9.00004 2.20435 9.00004 3V3.513C7.95743 3.88157 6.99189 4.4396 6.15204 5.159L5.70504 4.9C5.01548 4.50218 4.19612 4.39457 3.42723 4.60086C2.65833 4.80715 2.00287 5.31044 1.60504 6C1.20722 6.68956 1.09962 7.50892 1.30591 8.27782C1.5122 9.04672 2.01548 9.70218 2.70504 10.1L3.14904 10.356C2.94915 11.4436 2.94915 12.5584 3.14904 13.646L2.70504 13.902C2.01548 14.2998 1.5122 14.9553 1.30591 15.7242C1.09962 16.4931 1.20722 17.3124 1.60504 18.002C2.00287 18.6916 2.65833 19.1948 3.42723 19.4011C4.19612 19.6074 5.01548 19.4998 5.70504 19.102L6.15004 18.845C6.99081 19.5632 7.95702 20.1199 9.00004 20.487V21C9.00004 21.7956 9.31611 22.5587 9.87872 23.1213C10.4413 23.6839 11.2044 24 12 24C12.7957 24 13.5588 23.6839 14.1214 23.1213C14.684 22.5587 15 21.7956 15 21V20.487C16.0427 20.1184 17.0082 19.5604 17.848 18.841L18.295 19.099C18.9846 19.4968 19.804 19.6044 20.5729 19.3981C21.3418 19.1918 21.9972 18.6886 22.395 17.999C22.7929 17.3094 22.9005 16.4901 22.6942 15.7212C22.4879 14.9523 21.9846 14.2968 21.295 13.899L21.294 13.9ZM18.746 10.124C19.0847 11.3511 19.0847 12.6469 18.746 13.874C18.6869 14.0876 18.7004 14.3147 18.7844 14.5198C18.8684 14.7249 19.0181 14.8963 19.21 15.007L20.294 15.633C20.5239 15.7656 20.6916 15.9841 20.7603 16.2403C20.829 16.4966 20.7932 16.7697 20.6605 16.9995C20.5279 17.2293 20.3095 17.397 20.0532 17.4658C19.7969 17.5345 19.5239 17.4986 19.294 17.366L18.208 16.738C18.0159 16.6267 17.7923 16.5826 17.5723 16.6124C17.3523 16.6423 17.1485 16.7445 16.993 16.903C16.103 17.8117 14.9816 18.46 13.75 18.778C13.5351 18.8333 13.3446 18.9585 13.2086 19.1339C13.0727 19.3094 12.9989 19.525 12.999 19.747V21C12.999 21.2652 12.8937 21.5196 12.7062 21.7071C12.5186 21.8946 12.2643 22 11.999 22C11.7338 22 11.4795 21.8946 11.2919 21.7071C11.1044 21.5196 10.999 21.2652 10.999 21V19.748C10.9992 19.526 10.9254 19.3104 10.7894 19.1349C10.6535 18.9595 10.463 18.8343 10.248 18.779C9.01639 18.4597 7.89537 17.81 7.00604 16.9C6.85057 16.7415 6.64678 16.6393 6.4268 16.6094C6.20682 16.5796 5.98315 16.6237 5.79104 16.735L4.70704 17.362C4.59327 17.4287 4.46743 17.4722 4.33677 17.4901C4.2061 17.508 4.0732 17.4998 3.9457 17.4661C3.8182 17.4324 3.69862 17.3738 3.59386 17.2937C3.4891 17.2136 3.40122 17.1135 3.33528 16.9993C3.26934 16.8851 3.22664 16.759 3.20964 16.6282C3.19264 16.4974 3.20168 16.3646 3.23623 16.2373C3.27079 16.11 3.33017 15.9909 3.41098 15.8866C3.49178 15.7824 3.5924 15.6952 3.70704 15.63L4.79104 15.004C4.98299 14.8933 5.13272 14.7219 5.2167 14.5168C5.30069 14.3117 5.31417 14.0846 5.25504 13.871C4.9164 12.6439 4.9164 11.3481 5.25504 10.121C5.31311 9.90788 5.29898 9.68153 5.21486 9.47729C5.13074 9.27305 4.98136 9.10241 4.79004 8.992L3.70604 8.366C3.47623 8.23339 3.30851 8.01492 3.23978 7.75865C3.17105 7.50239 3.20693 7.22931 3.33954 6.9995C3.47215 6.76969 3.69062 6.60197 3.94689 6.53324C4.20316 6.46451 4.47623 6.50039 4.70604 6.633L5.79204 7.261C5.98362 7.37251 6.20682 7.41721 6.42657 7.38807C6.64632 7.35893 6.85015 7.25759 7.00604 7.1C7.89613 6.19134 9.01747 5.54302 10.249 5.225C10.4647 5.16956 10.6556 5.04375 10.7917 4.8675C10.9277 4.69125 11.001 4.47464 11 4.252V3C11 2.73478 11.1054 2.48043 11.2929 2.29289C11.4805 2.10536 11.7348 2 12 2C12.2653 2 12.5196 2.10536 12.7071 2.29289C12.8947 2.48043 13 2.73478 13 3V4.252C12.9999 4.47396 13.0737 4.68964 13.2096 4.86508C13.3456 5.04052 13.5361 5.16573 13.751 5.221C14.9831 5.54015 16.1044 6.18988 16.994 7.1C17.1495 7.25847 17.3533 7.36069 17.5733 7.39057C17.7933 7.42044 18.0169 7.37626 18.209 7.265L19.293 6.638C19.4068 6.5713 19.5327 6.52777 19.6633 6.5099C19.794 6.49204 19.9269 6.50019 20.0544 6.5339C20.1819 6.56761 20.3015 6.6262 20.4062 6.70631C20.511 6.78642 20.5989 6.88646 20.6648 7.00067C20.7307 7.11488 20.7734 7.24101 20.7904 7.37179C20.8074 7.50257 20.7984 7.63542 20.7639 7.76269C20.7293 7.88997 20.6699 8.00915 20.5891 8.11337C20.5083 8.2176 20.4077 8.30482 20.293 8.37L19.209 8.996C19.0181 9.10671 18.8691 9.27748 18.7854 9.48169C18.7016 9.68591 18.6878 9.9121 18.746 10.125V10.124Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15542'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const PlusIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || 24}
    height={width || 24}
    viewBox='0 0 25 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <circle cx='12.5' cy='11.9998' r='11.7' fill={color ? CSS_VARS[color] : '#374957'} />
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M16.2885 12.5411H13.0413V15.7883H11.9589V12.5411H8.71167V11.4587H11.9589V8.21143H13.0413V11.4587H16.2885V12.5411Z'
      fill='white'
    />
  </svg>
)

export const MinusIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 25'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <circle cx='11.7' cy='12.6248' r='11.7' fill={color ? CSS_VARS[color] : '#374957'} />
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M14.7619 10.3289L12.4658 12.625L14.7619 14.9211L13.9966 15.6865L11.7004 13.3904L9.40429 15.6865L8.63891 14.9211L10.935 12.625L8.63891 10.3289L9.40429 9.56348L11.7004 11.8596L13.9966 9.56348L14.7619 10.3289Z'
      fill='white'
    />
  </svg>
)

export const TrashIcon: React.FC<IconProps> = ({ width, onClick }) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    x='0px'
    y='0px'
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path d='M 10 2 L 9 3 L 5 3 C 4.4 3 4 3.4 4 4 C 4 4.6 4.4 5 5 5 L 7 5 L 17 5 L 19 5 C 19.6 5 20 4.6 20 4 C 20 3.4 19.6 3 19 3 L 15 3 L 14 2 L 10 2 z M 5 7 L 5 20 C 5 21.1 5.9 22 7 22 L 17 22 C 18.1 22 19 21.1 19 20 L 19 7 L 5 7 z M 9 9 C 9.6 9 10 9.4 10 10 L 10 19 C 10 19.6 9.6 20 9 20 C 8.4 20 8 19.6 8 19 L 8 10 C 8 9.4 8.4 9 9 9 z M 15 9 C 15.6 9 16 9.4 16 10 L 16 19 C 16 19.6 15.6 20 15 20 C 14.4 20 14 19.6 14 19 L 14 10 C 14 9.4 14.4 9 15 9 z'></path>
  </svg>
)

export const EditIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    x='0px'
    y='0px'
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      fill={color ? CSS_VARS[color] : '#374957'}
      d='M 18 2 L 15.585938 4.4140625 L 19.585938 8.4140625 L 22 6 L 18 2 z M 14.076172 5.9238281 L 3 17 L 3 21 L 7 21 L 18.076172 9.9238281 L 14.076172 5.9238281 z'
    ></path>
  </svg>
)

export const TextIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '24'}
    height={width ? width * 1.08 : '24'}
    viewBox='0 0 24 26'
    fill='none'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M9.46013 7.68362H16.9429C17.2736 7.68362 17.5908 7.55223 17.8247 7.31835C18.0586 7.08447 18.19 6.76726 18.19 6.4365C18.19 6.10574 18.0586 5.78853 17.8247 5.55465C17.5908 5.32077 17.2736 5.18938 16.9429 5.18938H9.46013C9.12937 5.18938 8.81216 5.32077 8.57828 5.55465C8.3444 5.78853 8.21301 6.10574 8.21301 6.4365C8.21301 6.76726 8.3444 7.08447 8.57828 7.31835C8.81216 7.55223 9.12937 7.68362 9.46013 7.68362ZM6.96589 12.6721H16.9429C17.2736 12.6721 17.5908 12.5407 17.8247 12.3068C18.0586 12.0729 18.19 11.7557 18.19 11.425C18.19 11.0942 18.0586 10.777 17.8247 10.5431C17.5908 10.3093 17.2736 10.1779 16.9429 10.1779H6.96589C6.63513 10.1779 6.31792 10.3093 6.08404 10.5431C5.85016 10.777 5.71877 11.0942 5.71877 11.425C5.71877 11.7557 5.85016 12.0729 6.08404 12.3068C6.31792 12.5407 6.63513 12.6721 6.96589 12.6721ZM6.96589 17.6606H16.9429C17.2736 17.6606 17.5908 17.5292 17.8247 17.2953C18.0586 17.0614 18.19 16.7442 18.19 16.4135C18.19 16.0827 18.0586 15.7655 17.8247 15.5316C17.5908 15.2977 17.2736 15.1663 16.9429 15.1663H6.96589C6.63513 15.1663 6.31792 15.2977 6.08404 15.5316C5.85016 15.7655 5.71877 16.0827 5.71877 16.4135C5.71877 16.7442 5.85016 17.0614 6.08404 17.2953C6.31792 17.5292 6.63513 17.6606 6.96589 17.6606ZM21.9313 0.200897H1.97741C1.64665 0.200897 1.32944 0.33229 1.09556 0.56617C0.861678 0.800051 0.730286 1.11726 0.730286 1.44802V23.8962C0.730286 24.1278 0.79478 24.3548 0.916542 24.5518C1.0383 24.7488 1.21252 24.9081 1.41968 25.0116C1.62683 25.1152 1.85874 25.1591 2.0894 25.1383C2.32007 25.1175 2.54039 25.0328 2.72568 24.8939L5.30722 22.9608L7.87629 24.8939C8.09216 25.0558 8.35472 25.1433 8.62456 25.1433C8.8944 25.1433 9.15696 25.0558 9.37283 24.8939L11.9544 22.9608L14.5359 24.8939C14.7518 25.0558 15.0143 25.1433 15.2842 25.1433C15.554 25.1433 15.8166 25.0558 16.0325 24.8939L18.6015 22.9608L21.1831 24.8939C21.3692 25.0326 21.5905 25.1167 21.8218 25.1365C22.0532 25.1563 22.2855 25.1112 22.4925 25.0061C22.6982 24.9025 22.8712 24.7439 22.9922 24.548C23.1133 24.3521 23.1778 24.1265 23.1785 23.8962V1.44802C23.1785 1.11726 23.0471 0.800051 22.8132 0.56617C22.5793 0.33229 22.2621 0.200897 21.9313 0.200897ZM20.6842 21.4019L19.3498 20.4042C19.1339 20.2423 18.8714 20.1548 18.6015 20.1548C18.3317 20.1548 18.0691 20.2423 17.8532 20.4042L15.2842 22.3373L12.7026 20.4042C12.4868 20.2423 12.2242 20.1548 11.9544 20.1548C11.6845 20.1548 11.422 20.2423 11.2061 20.4042L8.62456 22.3373L6.05549 20.4042C5.83962 20.2423 5.57706 20.1548 5.30722 20.1548C5.03738 20.1548 4.77482 20.2423 4.55895 20.4042L3.22453 21.4019V2.69514H20.6842V21.4019Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

type EyeIconProps = {
  showPassword: boolean
  setShowPassword: React.Dispatch<React.SetStateAction<boolean>>
}
export const EyeIcon: React.FC<EyeIconProps> = ({ showPassword, setShowPassword }) => {
  return (
    <div
      style={{
        position: 'absolute',
        right: '10px',
        top: '15px',
        cursor: 'pointer',
        userSelect: 'none',
      }}
      onClick={() => setShowPassword(!showPassword)}
    >
      {showPassword ? (
        <svg
          width='20px'
          height='20px'
          viewBox='0 0 24 24'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            opacity='0.1'
            fillRule='evenodd'
            clipRule='evenodd'
            d='M16.8494 7.05025C14.1158 4.31658 9.6836 4.31658 6.94993 7.05025L4.82861 9.17157C3.49528 10.5049 2.82861 11.1716 2.82861 12C2.82861 12.8284 3.49528 13.4951 4.82861 14.8284L6.94993 16.9497C9.6836 19.6834 14.1158 19.6834 16.8494 16.9497L18.9707 14.8284C20.3041 13.4951 20.9707 12.8284 20.9707 12C20.9707 11.1716 20.3041 10.5049 18.9707 9.17157L16.8494 7.05025ZM12.0002 8.75C10.2053 8.75 8.75019 10.2051 8.75019 12C8.75019 13.7949 10.2053 15.25 12.0002 15.25C13.7951 15.25 15.2502 13.7949 15.2502 12C15.2502 10.2051 13.7951 8.75 12.0002 8.75Z'
            fill='#323232'
          />
          <path
            d='M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z'
            stroke='#323232'
            strokeWidth='2'
          />
          <path
            d='M6.94975 7.05025C9.68342 4.31658 14.1156 4.31658 16.8492 7.05025L18.9706 9.17157C20.3039 10.5049 20.9706 11.1716 20.9706 12C20.9706 12.8284 20.3039 13.4951 18.9706 14.8284L16.8492 16.9497C14.1156 19.6834 9.68342 19.6834 6.94975 16.9497L4.82843 14.8284C3.49509 13.4951 2.82843 12.8284 2.82843 12C2.82843 11.1716 3.49509 10.5049 4.82843 9.17157L6.94975 7.05025Z'
            stroke='#323232'
            strokeWidth='2'
            strokeLinejoin='round'
          />
        </svg>
      ) : (
        <svg
          width='20px'
          height='20px'
          viewBox='0 0 24 24'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            opacity='0.1'
            d='M6.29528 7.87634L5 9.17162C3.66667 10.505 3 11.1716 3 12C3 12.8285 3.66667 13.4951 5 14.8285L7.12132 16.9498C9.85499 19.6835 14.2871 19.6835 17.0208 16.9498L17.4322 16.5384L14.5053 14.2619C13.9146 14.8713 13.0873 15.2501 12.1716 15.2501C10.3766 15.2501 8.92157 13.795 8.92157 12.0001C8.92157 11.3746 9.09827 10.7904 9.40447 10.2946L6.29528 7.87634Z'
            fill='#323232'
          />
          <path
            d='M3.17139 5.12988L21.1714 19.1299'
            stroke='#323232'
            strokeWidth='2'
            strokeLinecap='round'
            strokeLinejoin='round'
          />
          <path
            d='M14.3653 13.8456C13.8162 14.5483 12.9609 15 12 15C10.3431 15 9 13.6569 9 12C9 11.3256 9.22253 10.7032 9.59817 10.2021'
            stroke='#323232'
            strokeWidth='2'
          />
          <path
            d='M9 5.62667C11.5803 4.45322 14.7268 4.92775 16.8493 7.05025L19.8511 10.052C20.3477 10.5486 20.5959 10.7969 20.7362 11.0605C21.0487 11.6479 21.0487 12.3521 20.7362 12.9395C20.5959 13.2031 20.3477 13.4514 19.8511 13.948V13.948L19.799 14'
            stroke='#323232'
            strokeWidth='2'
            strokeLinecap='round'
            strokeLinejoin='round'
          />
          <path
            d='M7.01596 8.39827C7.40649 8.00774 7.40649 7.37458 7.01596 6.98406C6.62544 6.59353 5.99228 6.59353 5.60175 6.98406L7.01596 8.39827ZM7.65685 16.2427L5.53553 14.1213L4.12132 15.5356L6.24264 17.6569L7.65685 16.2427ZM16.1421 16.2427C13.799 18.5858 10 18.5858 7.65685 16.2427L6.24264 17.6569C9.36684 20.7811 14.4322 20.7811 17.5563 17.6569L16.1421 16.2427ZM5.53553 9.8787L7.01596 8.39827L5.60175 6.98406L4.12132 8.46449L5.53553 9.8787ZM16.7465 15.6383L16.1421 16.2427L17.5563 17.6569L18.1607 17.0526L16.7465 15.6383ZM5.53553 14.1213C4.84888 13.4347 4.40652 12.9893 4.12345 12.6183C3.85798 12.2704 3.82843 12.1077 3.82843 12H1.82843C1.82843 12.7208 2.1322 13.3056 2.53341 13.8315C2.917 14.3342 3.47464 14.8889 4.12132 15.5356L5.53553 14.1213ZM4.12132 8.46449C3.47464 9.11116 2.917 9.6658 2.53341 10.1686C2.1322 10.6944 1.82843 11.2792 1.82843 12H3.82843C3.82843 11.8924 3.85798 11.7297 4.12345 11.3817C4.40652 11.0107 4.84888 10.5654 5.53553 9.8787L4.12132 8.46449Z'
            fill='#323232'
          />
        </svg>
      )}
    </div>
  )
}

export const CrossIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width}
    height={width}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M14.1208 11.9998L17.9998 8.11682C18.2517 7.83058 18.3851 7.45918 18.3729 7.07811C18.3607 6.69705 18.2039 6.33491 17.9343 6.06532C17.6647 5.79573 17.3026 5.63891 16.9215 5.62674C16.5405 5.61458 16.1691 5.74797 15.8828 5.99982L11.9998 9.87882L8.10983 5.98782C7.9705 5.84849 7.80509 5.73796 7.62304 5.66256C7.441 5.58715 7.24588 5.54834 7.04883 5.54834C6.85179 5.54834 6.65667 5.58715 6.47462 5.66256C6.29258 5.73796 6.12717 5.84849 5.98783 5.98782C5.8485 6.12715 5.73798 6.29256 5.66257 6.47461C5.58716 6.65666 5.54835 6.85177 5.54835 7.04882C5.54835 7.24587 5.58716 7.44098 5.66257 7.62303C5.73798 7.80508 5.8485 7.97049 5.98783 8.10982L9.87883 11.9998L5.99983 15.8818C5.84771 16.0178 5.72492 16.1834 5.639 16.3685C5.55307 16.5536 5.50581 16.7542 5.5001 16.9582C5.49439 17.1621 5.53036 17.3651 5.6058 17.5547C5.68124 17.7443 5.79457 17.9165 5.93885 18.0608C6.08314 18.2051 6.25534 18.3184 6.44493 18.3939C6.63452 18.4693 6.83751 18.5053 7.04147 18.4996C7.24544 18.4938 7.4461 18.4466 7.63118 18.3607C7.81625 18.2747 7.98184 18.1519 8.11783 17.9998L11.9998 14.1208L15.8778 17.9998C16.1592 18.2812 16.5409 18.4393 16.9388 18.4393C17.3368 18.4393 17.7184 18.2812 17.9998 17.9998C18.2812 17.7184 18.4393 17.3368 18.4393 16.9388C18.4393 16.5409 18.2812 16.1592 17.9998 15.8778L14.1208 11.9998Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const AngleUpIcon: React.FC<IconProps & IconToggle> = ({
  width,
  onClick,
  toggle,
  color,
}) => {
  return (
    <svg
      width={width || '24'}
      height={width || '24'}
      viewBox='0 0 24 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      style={{
        transition: 'transform 0.3s var(--BEZIER)',
        transform: toggle ? 'rotate(180deg)' : 'rotate(0deg)',
        cursor: onClick ? 'pointer' : 'unset',
      }}
      onClick={onClick}
    >
      <path
        d='M4.93887 16.1463C5.07817 16.2856 5.24358 16.3962 5.42563 16.4717C5.60768 16.5471 5.80281 16.5859 5.99987 16.5859C6.19694 16.5859 6.39207 16.5471 6.57412 16.4717C6.75617 16.3962 6.92157 16.2856 7.06087 16.1463L11.6469 11.5613C11.7406 11.4675 11.8678 11.4149 12.0004 11.4149C12.133 11.4149 12.2601 11.4675 12.3539 11.5613L16.9389 16.1463C17.2201 16.4277 17.6017 16.5858 17.9995 16.5859C18.3974 16.586 18.779 16.428 19.0604 16.1468C19.3418 15.8655 19.4999 15.484 19.5 15.0861C19.5001 14.6883 19.3421 14.3067 19.0609 14.0253L14.4749 9.43926C14.1499 9.11421 13.764 8.85637 13.3393 8.68046C12.9147 8.50455 12.4595 8.414 11.9999 8.414C11.5402 8.414 11.0851 8.50455 10.6604 8.68046C10.2357 8.85637 9.84988 9.11421 9.52487 9.43926L4.93887 14.0253C4.65767 14.3065 4.49969 14.688 4.49969 15.0858C4.49969 15.4835 4.65767 15.865 4.93887 16.1463Z'
        fill={color ? CSS_VARS[color] : '#374957'}
        fillOpacity='0.6'
      />
    </svg>
  )
}

export const CalendarIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8809_15546)'>
      <path
        d='M19 2H18V1C18 0.734784 17.8946 0.48043 17.7071 0.292893C17.5196 0.105357 17.2652 0 17 0C16.7348 0 16.4804 0.105357 16.2929 0.292893C16.1054 0.48043 16 0.734784 16 1V2H8V1C8 0.734784 7.89464 0.48043 7.70711 0.292893C7.51957 0.105357 7.26522 0 7 0C6.73478 0 6.48043 0.105357 6.29289 0.292893C6.10536 0.48043 6 0.734784 6 1V2H5C3.67441 2.00159 2.40356 2.52888 1.46622 3.46622C0.528882 4.40356 0.00158786 5.67441 0 7L0 19C0.00158786 20.3256 0.528882 21.5964 1.46622 22.5338C2.40356 23.4711 3.67441 23.9984 5 24H19C20.3256 23.9984 21.5964 23.4711 22.5338 22.5338C23.4711 21.5964 23.9984 20.3256 24 19V7C23.9984 5.67441 23.4711 4.40356 22.5338 3.46622C21.5964 2.52888 20.3256 2.00159 19 2ZM2 7C2 6.20435 2.31607 5.44129 2.87868 4.87868C3.44129 4.31607 4.20435 4 5 4H19C19.7956 4 20.5587 4.31607 21.1213 4.87868C21.6839 5.44129 22 6.20435 22 7V8H2V7ZM19 22H5C4.20435 22 3.44129 21.6839 2.87868 21.1213C2.31607 20.5587 2 19.7956 2 19V10H22V19C22 19.7956 21.6839 20.5587 21.1213 21.1213C20.5587 21.6839 19.7956 22 19 22Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M12 16.5C12.8284 16.5 13.5 15.8284 13.5 15C13.5 14.1716 12.8284 13.5 12 13.5C11.1716 13.5 10.5 14.1716 10.5 15C10.5 15.8284 11.1716 16.5 12 16.5Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M6.99988 16.5C7.82831 16.5 8.49988 15.8284 8.49988 15C8.49988 14.1716 7.82831 13.5 6.99988 13.5C6.17145 13.5 5.49988 14.1716 5.49988 15C5.49988 15.8284 6.17145 16.5 6.99988 16.5Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M17.0001 16.5C17.8285 16.5 18.5001 15.8284 18.5001 15C18.5001 14.1716 17.8285 13.5 17.0001 13.5C16.1717 13.5 15.5001 14.1716 15.5001 15C15.5001 15.8284 16.1717 16.5 17.0001 16.5Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15546'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const ReceiptIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8809_15544)'>
      <path
        d='M16 0H8C6.67441 0.00158786 5.40356 0.528882 4.46622 1.46622C3.52888 2.40356 3.00159 3.67441 3 5V23C3.00014 23.1819 3.04989 23.3603 3.14388 23.516C3.23788 23.6717 3.37256 23.7989 3.53344 23.8837C3.69431 23.9686 3.87529 24.008 4.05688 23.9976C4.23847 23.9873 4.4138 23.9276 4.564 23.825L6.67 22.386L8.776 23.825C8.94239 23.9389 9.13934 23.9999 9.341 23.9999C9.54266 23.9999 9.73961 23.9389 9.906 23.825L12.006 22.386L14.106 23.825C14.2725 23.9392 14.4696 24.0003 14.6715 24.0003C14.8734 24.0003 15.0705 23.9392 15.237 23.825L17.337 22.387L19.437 23.824C19.5871 23.9263 19.7623 23.9857 19.9436 23.996C20.125 24.0062 20.3057 23.9669 20.4664 23.8821C20.627 23.7974 20.7616 23.6706 20.8556 23.5151C20.9496 23.3597 20.9996 23.1816 21 23V5C20.9984 3.67441 20.4711 2.40356 19.5338 1.46622C18.5964 0.528882 17.3256 0.00158786 16 0V0ZM19 21.1L17.9 20.348C17.7334 20.2336 17.5361 20.1724 17.334 20.1724C17.1319 20.1724 16.9346 20.2336 16.768 20.348L14.668 21.787L12.568 20.348C12.4015 20.2338 12.2044 20.1727 12.0025 20.1727C11.8006 20.1727 11.6035 20.2338 11.437 20.348L9.337 21.787L7.237 20.348C7.07071 20.2343 6.87396 20.1734 6.6725 20.1734C6.47105 20.1734 6.27429 20.2343 6.108 20.348L5 21.1V5C5 4.20435 5.31607 3.44129 5.87868 2.87868C6.44129 2.31607 7.20435 2 8 2H16C16.7956 2 17.5587 2.31607 18.1213 2.87868C18.6839 3.44129 19 4.20435 19 5V21.1Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M15.9999 8.00061H7.99988C7.44759 8.00061 6.99988 8.44832 6.99988 9.00061C6.99988 9.55289 7.44759 10.0006 7.99988 10.0006H15.9999C16.5522 10.0006 16.9999 9.55289 16.9999 9.00061C16.9999 8.44832 16.5522 8.00061 15.9999 8.00061Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M13.9999 12H7.99988C7.44759 12 6.99988 12.4477 6.99988 13C6.99988 13.5523 7.44759 14 7.99988 14H13.9999C14.5521 14 14.9999 13.5523 14.9999 13C14.9999 12.4477 14.5521 12 13.9999 12Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15544'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const CartIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8809_15545)'>
      <path
        d='M22.713 4.077C22.4317 3.73944 22.0796 3.46795 21.6815 3.28182C21.2835 3.09568 20.8494 2.99946 20.41 3H4.242L4.2 2.649C4.11405 1.91942 3.76338 1.24673 3.21449 0.758478C2.6656 0.270223 1.95663 0.000341793 1.222 0L1 0C0.734784 0 0.48043 0.105357 0.292893 0.292893C0.105357 0.48043 0 0.734784 0 1C0 1.26522 0.105357 1.51957 0.292893 1.70711C0.48043 1.89464 0.734784 2 1 2H1.222C1.46693 2.00003 1.70334 2.08996 1.88637 2.25272C2.06941 2.41547 2.18634 2.63975 2.215 2.883L3.591 14.583C3.73385 15.7998 4.31848 16.9218 5.23391 17.736C6.14934 18.5502 7.33185 19 8.557 19H19C19.2652 19 19.5196 18.8946 19.7071 18.7071C19.8946 18.5196 20 18.2652 20 18C20 17.7348 19.8946 17.4804 19.7071 17.2929C19.5196 17.1054 19.2652 17 19 17H8.557C7.93806 16.9983 7.3348 16.8051 6.82994 16.4471C6.32507 16.089 5.94331 15.5835 5.737 15H17.657C18.8293 15.0001 19.9643 14.5882 20.8638 13.8364C21.7633 13.0846 22.37 12.0407 22.578 10.887L23.363 6.533C23.4414 6.10101 23.4237 5.65707 23.3114 5.23264C23.1991 4.80821 22.9948 4.41368 22.713 4.077ZM21.4 6.178L20.614 10.532C20.4891 11.225 20.1245 11.852 19.5839 12.3032C19.0433 12.7544 18.3612 13.0011 17.657 13H5.419L4.478 5H20.41C20.5569 4.99912 20.7022 5.03062 20.8355 5.09226C20.9689 5.15389 21.087 5.24415 21.1815 5.35661C21.276 5.46907 21.3446 5.60097 21.3824 5.74294C21.4201 5.8849 21.4262 6.03344 21.4 6.178Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M7.00012 24.0006C8.10469 24.0006 9.00011 23.1052 9.00011 22.0006C9.00011 20.896 8.10469 20.0006 7.00012 20.0006C5.89555 20.0006 5.00012 20.896 5.00012 22.0006C5.00012 23.1052 5.89555 24.0006 7.00012 24.0006Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M17 24.0006C18.1046 24.0006 19 23.1052 19 22.0006C19 20.896 18.1046 20.0006 17 20.0006C15.8954 20.0006 15 20.896 15 22.0006C15 23.1052 15.8954 24.0006 17 24.0006Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15545'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const UserIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8809_15543)'>
      <path
        d='M12 11.9999C13.1867 11.9999 14.3467 11.648 15.3334 10.9888C16.3201 10.3295 17.0892 9.3924 17.5433 8.29604C17.9974 7.19969 18.1162 5.99329 17.8847 4.8294C17.6532 3.66551 17.0818 2.59642 16.2426 1.7573C15.4035 0.918186 14.3344 0.346741 13.1705 0.11523C12.0067 -0.116281 10.8003 0.00253868 9.7039 0.456664C8.60754 0.91079 7.67047 1.67983 7.01118 2.66652C6.35189 3.65321 6 4.81325 6 5.99994C6.00159 7.59075 6.63424 9.11595 7.75911 10.2408C8.88399 11.3657 10.4092 11.9984 12 11.9999ZM12 1.99994C12.7911 1.99994 13.5645 2.23454 14.2223 2.67406C14.8801 3.11359 15.3928 3.7383 15.6955 4.46921C15.9983 5.20011 16.0775 6.00438 15.9231 6.7803C15.7688 7.55623 15.3878 8.26896 14.8284 8.82837C14.269 9.38778 13.5563 9.76874 12.7804 9.92308C12.0044 10.0774 11.2002 9.99821 10.4693 9.69546C9.73836 9.39271 9.11365 8.88002 8.67412 8.22222C8.2346 7.56443 8 6.79107 8 5.99994C8 4.93908 8.42143 3.92166 9.17157 3.17151C9.92172 2.42137 10.9391 1.99994 12 1.99994Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
      <path
        d='M12 14.0006C9.61386 14.0033 7.32622 14.9523 5.63896 16.6396C3.95171 18.3268 3.00265 20.6145 3 23.0006C3 23.2658 3.10536 23.5202 3.29289 23.7077C3.48043 23.8953 3.73478 24.0006 4 24.0006C4.26522 24.0006 4.51957 23.8953 4.70711 23.7077C4.89464 23.5202 5 23.2658 5 23.0006C5 21.1441 5.7375 19.3636 7.05025 18.0509C8.36301 16.7381 10.1435 16.0006 12 16.0006C13.8565 16.0006 15.637 16.7381 16.9497 18.0509C18.2625 19.3636 19 21.1441 19 23.0006C19 23.2658 19.1054 23.5202 19.2929 23.7077C19.4804 23.8953 19.7348 24.0006 20 24.0006C20.2652 24.0006 20.5196 23.8953 20.7071 23.7077C20.8946 23.5202 21 23.2658 21 23.0006C20.9974 20.6145 20.0483 18.3268 18.361 16.6396C16.6738 14.9523 14.3861 14.0033 12 14.0006Z'
        fill={color ? CSS_VARS[color] : '#374957'}
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15543'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const CashIcon: React.FC<IconProps> = ({ width, onClick }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8809_15541)'>
      <path
        d='M19 20.0003H5C3.67441 19.9987 2.40356 19.4714 1.46622 18.5341C0.528882 17.5967 0.00158786 16.3259 0 15.0003L0 9.00031C0.00158786 7.67471 0.528882 6.40386 1.46622 5.46653C2.40356 4.52919 3.67441 4.00189 5 4.00031H19C20.3256 4.00189 21.5964 4.52919 22.5338 5.46653C23.4711 6.40386 23.9984 7.67471 24 9.00031V15.0003C23.9984 16.3259 23.4711 17.5967 22.5338 18.5341C21.5964 19.4714 20.3256 19.9987 19 20.0003ZM5 6.00031C4.20435 6.00031 3.44129 6.31638 2.87868 6.87898C2.31607 7.44159 2 8.20466 2 9.00031V15.0003C2 15.796 2.31607 16.559 2.87868 17.1216C3.44129 17.6842 4.20435 18.0003 5 18.0003H19C19.7956 18.0003 20.5587 17.6842 21.1213 17.1216C21.6839 16.559 22 15.796 22 15.0003V9.00031C22 8.20466 21.6839 7.44159 21.1213 6.87898C20.5587 6.31638 19.7956 6.00031 19 6.00031H5ZM12 16.0003C11.2089 16.0003 10.4355 15.7657 9.77772 15.3262C9.11992 14.8867 8.60723 14.2619 8.30448 13.531C8.00173 12.8001 7.92252 11.9959 8.07686 11.2199C8.2312 10.444 8.61216 9.73129 9.17157 9.17188C9.73098 8.61247 10.4437 8.2315 11.2196 8.07716C11.9956 7.92282 12.7998 8.00204 13.5307 8.30479C14.2616 8.60754 14.8864 9.12023 15.3259 9.77802C15.7654 10.4358 16 11.2092 16 12.0003C16 13.0612 15.5786 14.0786 14.8284 14.8287C14.0783 15.5789 13.0609 16.0003 12 16.0003ZM12 10.0003C11.6044 10.0003 11.2178 10.1176 10.8889 10.3374C10.56 10.5571 10.3036 10.8695 10.1522 11.2349C10.0009 11.6004 9.96126 12.0025 10.0384 12.3905C10.1156 12.7784 10.3061 13.1348 10.5858 13.4145C10.8655 13.6942 11.2219 13.8847 11.6098 13.9619C11.9978 14.039 12.3999 13.9994 12.7654 13.8481C13.1308 13.6967 13.4432 13.4403 13.6629 13.1114C13.8827 12.7825 14 12.3959 14 12.0003C14 11.4699 13.7893 10.9612 13.4142 10.5861C13.0391 10.211 12.5304 10.0003 12 10.0003ZM5 8.00031C4.80222 8.00031 4.60888 8.05895 4.44443 8.16884C4.27998 8.27872 4.15181 8.4349 4.07612 8.61762C4.00043 8.80035 3.98063 9.00141 4.01921 9.1954C4.0578 9.38938 4.15304 9.56756 4.29289 9.70741C4.43275 9.84726 4.61093 9.94251 4.80491 9.98109C4.99889 10.0197 5.19996 9.99987 5.38268 9.92418C5.56541 9.8485 5.72159 9.72032 5.83147 9.55588C5.94135 9.39143 6 9.19809 6 9.00031C6 8.73509 5.89464 8.48073 5.70711 8.2932C5.51957 8.10566 5.26522 8.00031 5 8.00031ZM18 9.00031C18 9.19809 18.0586 9.39143 18.1685 9.55588C18.2784 9.72032 18.4346 9.8485 18.6173 9.92418C18.8 9.99987 19.0011 10.0197 19.1951 9.98109C19.3891 9.94251 19.5673 9.84726 19.7071 9.70741C19.847 9.56756 19.9422 9.38938 19.9808 9.1954C20.0194 9.00141 19.9996 8.80035 19.9239 8.61762C19.8482 8.4349 19.72 8.27872 19.5556 8.16884C19.3911 8.05895 19.1978 8.00031 19 8.00031C18.7348 8.00031 18.4804 8.10566 18.2929 8.2932C18.1054 8.48073 18 8.73509 18 9.00031ZM5 14.0003C4.80222 14.0003 4.60888 14.059 4.44443 14.1688C4.27998 14.2787 4.15181 14.4349 4.07612 14.6176C4.00043 14.8003 3.98063 15.0014 4.01921 15.1954C4.0578 15.3894 4.15304 15.5676 4.29289 15.7074C4.43275 15.8473 4.61093 15.9425 4.80491 15.9811C4.99889 16.0197 5.19996 15.9999 5.38268 15.9242C5.56541 15.8485 5.72159 15.7203 5.83147 15.5559C5.94135 15.3914 6 15.1981 6 15.0003C6 14.7351 5.89464 14.4807 5.70711 14.2932C5.51957 14.1057 5.26522 14.0003 5 14.0003ZM18 15.0003C18 15.1981 18.0586 15.3914 18.1685 15.5559C18.2784 15.7203 18.4346 15.8485 18.6173 15.9242C18.8 15.9999 19.0011 16.0197 19.1951 15.9811C19.3891 15.9425 19.5673 15.8473 19.7071 15.7074C19.847 15.5676 19.9422 15.3894 19.9808 15.1954C20.0194 15.0014 19.9996 14.8003 19.9239 14.6176C19.8482 14.4349 19.72 14.2787 19.5556 14.1688C19.3911 14.059 19.1978 14.0003 19 14.0003C18.7348 14.0003 18.4804 14.1057 18.2929 14.2932C18.1054 14.4807 18 14.7351 18 15.0003Z'
        fill='#374957'
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15541'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const MoneyIcon: React.FC<IconProps> = () => (
  <svg width='24' height='21' viewBox='0 0 25 21' fill='none' xmlns='http://www.w3.org/2000/svg'>
    <g clipPath='url(#clip0_8809_15344)'>
      <path
        d='M17.8438 0.478135L0.946673 11.2386C0.606946 11.455 0.506927 11.9058 0.723273 12.2455L5.01631 18.9868C5.23266 19.3265 5.68345 19.4266 6.02317 19.2102L22.9203 8.44971C23.26 8.23337 23.36 7.78258 23.1437 7.44285L18.8507 0.701535C18.6343 0.361808 18.1835 0.261789 17.8438 0.478135Z'
        fill='#91CD86'
      />
      <path
        d='M19.9888 2.49164L22.0059 5.65607C21.7048 5.84784 21.4444 6.09704 21.2395 6.38945C21.0347 6.68186 20.8895 7.01175 20.8122 7.36029C20.7349 7.70882 20.727 8.06917 20.7889 8.42076C20.8509 8.77235 20.9815 9.10829 21.1733 9.40939C21.1964 9.44586 21.2207 9.48172 21.245 9.51696L7.6994 18.1436C7.67752 18.1072 7.65503 18.0695 7.63194 18.033C7.44032 17.7318 7.19122 17.4712 6.89888 17.2662C6.60654 17.0612 6.27667 16.9158 5.92813 16.8383C5.57959 16.7608 5.21919 16.7528 4.86753 16.8146C4.51587 16.8764 4.17984 17.0069 3.87862 17.1986L1.86157 14.033C2.1627 13.8412 2.42311 13.592 2.62792 13.2996C2.83274 13.0072 2.97795 12.6773 3.05526 12.3288C3.13258 11.9802 3.14048 11.6199 3.07852 11.2683C3.01656 10.9167 2.88596 10.5808 2.69416 10.2797C2.67106 10.2432 2.64676 10.2073 2.62245 10.1721L16.1656 1.54541C16.1875 1.58187 16.21 1.61955 16.2331 1.65602C16.4246 1.95772 16.6738 2.21871 16.9663 2.42403C17.2588 2.62935 17.5889 2.77499 17.9377 2.8526C18.2865 2.93021 18.6473 2.93828 18.9992 2.87634C19.3512 2.81441 19.6875 2.68368 19.9888 2.49164Z'
        fill='#A9EA9C'
      />
      <path
        d='M5.63357 19.6903C5.44933 19.6906 5.26801 19.6444 5.10641 19.5559C4.94482 19.4674 4.8082 19.3395 4.70922 19.1841L0.415631 12.442C0.259797 12.1973 0.207531 11.9007 0.270327 11.6175C0.333123 11.3343 0.505839 11.0877 0.750488 10.9318L17.6453 0.171368C17.89 0.0155345 18.1865 -0.0367321 18.4697 0.0260641C18.7529 0.0888603 18.9996 0.261577 19.1555 0.506226L23.4485 7.24774C23.6043 7.49242 23.6566 7.78897 23.5938 8.07218C23.531 8.35539 23.3583 8.60206 23.1136 8.75794L6.21881 19.5184C6.04413 19.6303 5.84106 19.69 5.63357 19.6903ZM18.2318 0.729261C18.1631 0.729173 18.0958 0.748788 18.0379 0.78578L1.14247 11.5468C1.06135 11.5991 1.00427 11.6815 0.983768 11.7758C0.963262 11.8701 0.980995 11.9687 1.03308 12.05L5.32424 18.7915C5.37665 18.8725 5.45904 18.9295 5.55336 18.9499C5.64768 18.9703 5.74624 18.9524 5.82744 18.9003L22.7247 8.14353C22.8062 8.0916 22.8638 8.00943 22.8847 7.91508C22.9057 7.82072 22.8884 7.7219 22.8365 7.64033L18.5429 0.897602C18.4908 0.816383 18.4086 0.759127 18.3144 0.738377C18.2873 0.732274 18.2596 0.729216 18.2318 0.729261Z'
        fill='#1D6855'
      />
      <path
        d='M2.0783 11.9723L5.08108 10.0597C5.17953 9.99897 5.08837 9.83914 4.98931 9.90235L1.98593 11.8124C1.88748 11.8732 1.97863 12.033 2.07769 11.9698L2.0783 11.9723Z'
        fill='white'
      />
      <path
        d='M5.51824 9.77896L6.99259 8.84002C7.09104 8.77925 6.99988 8.61942 6.90082 8.68262L5.42587 9.62156C5.32742 9.68233 5.41858 9.84216 5.51764 9.77896H5.51824Z'
        fill='white'
      />
      <path
        d='M6.01948 18.4001L12.9889 13.9637L13.9613 13.3426C14.0597 13.2819 13.9685 13.122 13.8695 13.1852L6.90311 17.6241L5.93075 18.2452C5.8323 18.3059 5.92346 18.4658 6.02252 18.4026L6.01948 18.4001Z'
        fill='white'
      />
      <path
        d='M16.0536 12.0482L21.1926 8.77563L21.9255 8.30889C22.024 8.24812 21.9328 8.08829 21.8337 8.15149L16.6954 11.4253L15.9625 11.892C15.864 11.9528 15.9552 12.1127 16.0543 12.0495L16.0536 12.0482Z'
        fill='white'
      />
      <path
        d='M12.6078 10.0117C12.4212 9.7188 12.1277 9.63068 11.6786 9.72913C11.3444 9.7899 11.1924 9.81239 11.1098 9.6793C11.049 9.58145 11.083 9.42162 11.2872 9.29157C11.4328 9.19506 11.5997 9.13541 11.7734 9.11776L11.6421 8.67655C11.4503 8.69907 11.2662 8.76563 11.1043 8.87102L10.8782 8.51489L10.5227 8.74097L10.7743 9.1366C10.5251 9.41737 10.4905 9.74979 10.6649 10.0239C10.857 10.3277 11.1979 10.3709 11.6239 10.2749C11.9235 10.1965 12.0724 10.2141 12.1514 10.3356C12.242 10.4779 12.183 10.6395 11.9691 10.7756C11.7883 10.8862 11.5854 10.9557 11.3747 10.9792L11.5115 11.4289C11.7209 11.4008 11.9226 11.331 12.1046 11.2235L12.3319 11.5809L12.6874 11.3548L12.6309 11.2661L12.4431 10.9707C12.7676 10.6541 12.7877 10.2943 12.6078 10.0117Z'
        fill='#34B67A'
      />
      <path
        d='M11.6118 13.6253C10.991 13.6262 10.3808 13.4655 9.84112 13.1588C9.30146 12.8521 8.85103 12.41 8.53422 11.8762C8.21742 11.3424 8.04518 10.7353 8.03447 10.1147C8.02376 9.49404 8.17496 8.88133 8.47316 8.33693C8.77136 7.79252 9.20627 7.33522 9.73504 7.01009C10.2638 6.68495 10.8682 6.50321 11.4885 6.48277C12.1089 6.46233 12.7239 6.60391 13.2729 6.89354C13.822 7.18317 14.286 7.61086 14.6194 8.13446C14.9632 8.67404 15.1558 9.29606 15.1769 9.93551C15.1981 10.575 15.0471 11.2084 14.7397 11.7695C14.4324 12.3306 13.9799 12.7989 13.4297 13.1253C12.8794 13.4518 12.2516 13.6245 11.6118 13.6253ZM11.6002 7.08734C10.9419 7.08834 10.3027 7.30828 9.78314 7.71253C9.2636 8.11678 8.89328 8.68237 8.73052 9.32021C8.56775 9.95806 8.62178 10.6319 8.8841 11.2357C9.14642 11.8395 9.60213 12.3388 10.1794 12.6551C10.7568 12.9714 11.4229 13.0867 12.0729 12.9828C12.723 12.8789 13.32 12.5617 13.7699 12.0812C14.2199 11.6007 14.4972 10.9842 14.5583 10.3287C14.6193 9.67327 14.4606 9.01613 14.1071 8.4608C13.8988 8.13174 13.6272 7.84725 13.3083 7.62381C12.9893 7.40037 12.6291 7.2424 12.2487 7.15905C12.0358 7.11158 11.8183 7.08753 11.6002 7.08734Z'
        fill='#91CD86'
      />
      <path
        d='M20.6494 5.40555L1.30858 10.6241C0.919725 10.729 0.689549 11.1293 0.794471 11.5182L2.87648 19.2344C2.9814 19.6233 3.38169 19.8535 3.77055 19.7486L23.1114 14.53C23.5002 14.4251 23.7304 14.0248 23.6255 13.6359L21.5435 5.91967C21.4386 5.53081 21.0383 5.30063 20.6494 5.40555Z'
        fill='#91CD86'
      />
      <path
        d='M22.0952 7.96664L23.073 11.5917C22.7283 11.6847 22.4053 11.8446 22.1224 12.0624C21.8395 12.2802 21.6023 12.5516 21.4243 12.8611C21.2463 13.1706 21.1311 13.5121 21.0851 13.8661C21.0391 14.2202 21.0633 14.5798 21.1563 14.9245C21.1678 14.9664 21.18 15.0078 21.1927 15.0461L5.68779 19.2315C5.67807 19.1901 5.66774 19.1476 5.6568 19.1057C5.56385 18.761 5.40391 18.4379 5.18611 18.1551C4.96831 17.8722 4.69692 17.635 4.38743 17.457C4.07795 17.279 3.73643 17.1637 3.38239 17.1177C3.02835 17.0717 2.66871 17.0959 2.32402 17.1889L1.34619 13.5638C1.6909 13.4709 2.01392 13.3109 2.2968 13.0931C2.57969 12.8753 2.8169 12.6039 2.9949 12.2944C3.17289 11.985 3.28817 11.6434 3.33417 11.2894C3.38016 10.9354 3.35597 10.5757 3.26296 10.231C3.25142 10.1891 3.23926 10.1478 3.2265 10.1095L18.7314 5.92407C18.7412 5.9654 18.7515 6.00794 18.7624 6.04987C18.8554 6.39458 19.0153 6.7176 19.2331 7.00048C19.4509 7.28337 19.7223 7.52058 20.0318 7.69858C20.3413 7.87657 20.6828 7.99185 21.0368 8.03785C21.3909 8.08384 21.7505 8.05965 22.0952 7.96664Z'
        fill='#A9EA9C'
      />
      <path
        d='M3.5794 20.1388C3.33912 20.1379 3.10575 20.0583 2.91507 19.9121C2.7244 19.7659 2.58694 19.5611 2.52378 19.3293L0.442314 11.6112C0.404992 11.4724 0.395385 11.3276 0.41404 11.1851C0.432696 11.0426 0.479248 10.9052 0.551037 10.7807C0.622826 10.6562 0.718445 10.547 0.83243 10.4595C0.946414 10.372 1.07653 10.3078 1.21534 10.2705L20.5544 5.05502C20.6931 5.01757 20.8379 5.00782 20.9803 5.02631C21.1228 5.04481 21.2602 5.09118 21.3848 5.1628C21.5093 5.23441 21.6186 5.32986 21.7062 5.44369C21.7939 5.55752 21.8583 5.68751 21.8957 5.82622L23.9771 13.5444C24.0146 13.6831 24.0243 13.8278 24.0058 13.9703C23.9874 14.1127 23.941 14.2502 23.8694 14.3747C23.7977 14.4993 23.7023 14.6085 23.5885 14.6962C23.4746 14.7838 23.3447 14.8482 23.2059 14.8856L3.86442 20.1011C3.77149 20.1262 3.67565 20.1388 3.5794 20.1388ZM20.8388 5.746C20.807 5.74609 20.7753 5.75038 20.7446 5.75876L1.40313 10.9761C1.35667 10.9886 1.31314 11.0101 1.27503 11.0394C1.23693 11.0688 1.20501 11.1054 1.18112 11.1471C1.15723 11.1889 1.14183 11.235 1.13581 11.2827C1.12979 11.3304 1.13328 11.3788 1.14606 11.4252L3.22753 19.1433C3.25272 19.2366 3.31392 19.3161 3.39767 19.3643C3.48142 19.4125 3.58088 19.4255 3.6742 19.4004L23.0157 14.1831C23.0624 14.1709 23.1062 14.1497 23.1446 14.1205C23.183 14.0913 23.2152 14.0548 23.2394 14.0131C23.2636 13.9714 23.2792 13.9253 23.2855 13.8775C23.2918 13.8297 23.2885 13.7811 23.2758 13.7346L21.1913 6.01644C21.17 5.9391 21.1239 5.87086 21.0602 5.82215C20.9964 5.77343 20.9185 5.7469 20.8382 5.74661L20.8388 5.746Z'
        fill='#1D6855'
      />
      <path
        d='M4.01106 18.9733L11.9881 16.8213L13.1045 16.5174C13.1271 16.5104 13.1462 16.4949 13.1575 16.4741C13.1689 16.4533 13.1717 16.4289 13.1654 16.406C13.1591 16.3832 13.1441 16.3637 13.1237 16.3517C13.1032 16.3397 13.0789 16.3361 13.0559 16.3418L5.08006 18.4968L3.96366 18.8007C3.94101 18.8077 3.92197 18.8232 3.9106 18.844C3.89922 18.8648 3.89639 18.8892 3.90272 18.9121C3.90904 18.9349 3.92402 18.9544 3.94448 18.9664C3.96493 18.9784 3.98925 18.9819 4.01228 18.9763L4.01106 18.9733Z'
        fill='white'
      />
      <path
        d='M15.4868 15.9115L21.3689 14.3247L22.2076 14.0993C22.2303 14.0923 22.2493 14.0767 22.2607 14.0559C22.2721 14.0351 22.2749 14.0107 22.2686 13.9879C22.2622 13.965 22.2472 13.9455 22.2268 13.9335C22.2063 13.9215 22.182 13.918 22.159 13.9236L16.2768 15.5104L15.4363 15.7359C15.4137 15.7429 15.3946 15.7584 15.3833 15.7792C15.3719 15.8 15.369 15.8244 15.3754 15.8473C15.3817 15.8701 15.3967 15.8896 15.4171 15.9016C15.4376 15.9136 15.4619 15.9172 15.4849 15.9115H15.4868Z'
        fill='white'
      />
      <path
        d='M12.803 12.9391C12.7124 12.6036 12.459 12.4323 12.0008 12.3922C11.6629 12.3527 11.5146 12.3271 11.4733 12.1746C11.4429 12.0628 11.525 11.9206 11.7589 11.8574C11.9275 11.8085 12.1055 11.8016 12.2773 11.8373L12.284 11.3773C12.0942 11.3414 11.8987 11.35 11.7127 11.4022L11.6027 10.9938L11.1962 11.1038L11.3177 11.5565C10.9962 11.7498 10.8637 12.0567 10.9482 12.3703C11.0412 12.7161 11.3536 12.8607 11.7881 12.8966C12.0974 12.9112 12.2342 12.9725 12.2743 13.1147C12.318 13.2776 12.2135 13.415 11.9704 13.4794C11.7647 13.531 11.5502 13.5368 11.342 13.4964L11.3378 13.9668C11.5462 14.0026 11.7597 13.9962 11.9656 13.9479L12.0762 14.3569L12.4827 14.2469L12.4554 14.1454L12.3642 13.8075C12.7623 13.5997 12.8905 13.2624 12.803 12.9391Z'
        fill='#34B67A'
      />
      <path
        d='M11.8287 16.2537C11.1623 16.2526 10.5095 16.0652 9.94393 15.7126C9.3784 15.3601 8.92273 14.8564 8.6284 14.2585C8.33406 13.6606 8.21279 12.9923 8.27829 12.3291C8.34378 11.6659 8.59342 11.0342 8.99902 10.5054C9.40462 9.97662 9.95 9.57179 10.5736 9.33664C11.1971 9.1015 11.874 9.04542 12.5278 9.17473C13.1816 9.30404 13.7861 9.61359 14.2732 10.0684C14.7603 10.5232 15.1105 11.1052 15.2843 11.7486C15.4264 12.2787 15.4447 12.8345 15.3377 13.3728C15.2308 13.9112 15.0014 14.4177 14.6673 14.8532C14.3333 15.2887 13.9035 15.6415 13.4113 15.8844C12.9191 16.1272 12.3776 16.2536 11.8287 16.2537ZM11.8336 9.71393C11.2139 9.71408 10.6098 9.90839 10.1062 10.2696C9.60267 10.6307 9.2249 11.1406 9.02604 11.7275C8.82718 12.3144 8.8172 12.9489 8.99752 13.5418C9.17785 14.1347 9.5394 14.6562 10.0314 15.033C10.5233 15.4098 11.121 15.623 11.7404 15.6426C12.3598 15.6623 12.9698 15.4873 13.4846 15.1424C13.9995 14.7975 14.3933 14.3 14.6108 13.7197C14.8283 13.1394 14.8585 12.5056 14.6972 11.9072C14.5284 11.2771 14.1561 10.7204 13.6382 10.3238C13.1204 9.92714 12.4859 9.71274 11.8336 9.71393Z'
        fill='#91CD86'
      />
      <path
        d='M21.4468 11.1893L1.42893 10.4237C1.02646 10.4084 0.687718 10.7221 0.672327 11.1246L0.366918 19.111C0.351527 19.5135 0.665317 19.8522 1.06779 19.8676L21.0857 20.6331C21.4881 20.6485 21.8269 20.3347 21.8423 19.9322L22.1477 11.9459C22.1631 11.5434 21.8493 11.2046 21.4468 11.1893Z'
        fill='#91CD86'
      />
      <path
        d='M22.0655 14.0653L21.9214 17.8168C21.5646 17.803 21.2085 17.8597 20.8736 17.9836C20.5387 18.1075 20.2314 18.2962 19.9695 18.5389C19.7075 18.7816 19.4959 19.0735 19.3468 19.398C19.1976 19.7225 19.1139 20.0732 19.1004 20.43V20.5595L3.05637 19.9444C3.05637 19.9019 3.06245 19.8587 3.06366 19.815C3.07741 19.4581 3.02072 19.1021 2.89681 18.7672C2.77291 18.4322 2.58423 18.125 2.34155 17.863C2.09887 17.601 1.80695 17.3894 1.48246 17.2403C1.15798 17.0912 0.807293 17.0075 0.450439 16.9939L0.594471 13.2424C0.951316 13.2562 1.30737 13.1995 1.6423 13.0756C1.97723 12.9517 2.28446 12.763 2.54644 12.5203C2.80842 12.2776 3.02002 11.9857 3.16914 11.6612C3.31826 11.3367 3.40199 10.9861 3.41554 10.6292C3.41554 10.5861 3.41554 10.5423 3.41554 10.4998L19.4595 11.1148C19.4595 11.1573 19.4534 11.2005 19.4522 11.2442C19.4385 11.6011 19.4952 11.9571 19.6191 12.2921C19.743 12.627 19.9317 12.9342 20.1744 13.1962C20.417 13.4582 20.709 13.6698 21.0334 13.8189C21.3579 13.968 21.7086 14.0517 22.0655 14.0653Z'
        fill='#A9EA9C'
      />
      <path
        d='M21.1125 20.9999H21.0699L1.05203 20.2318C0.908448 20.2264 0.767338 20.1927 0.636759 20.1328C0.50618 20.0728 0.38869 19.9877 0.291001 19.8824C0.193312 19.777 0.117337 19.6534 0.0674155 19.5187C0.0174943 19.384 -0.0053951 19.2407 5.47892e-05 19.0972L0.303918 11.1104C0.309399 10.9668 0.343114 10.8257 0.403137 10.6952C0.463159 10.5646 0.548313 10.4472 0.653735 10.3495C0.759156 10.2519 0.88278 10.176 1.01754 10.1262C1.15231 10.0763 1.29557 10.0535 1.43915 10.059L21.4571 10.826C21.6006 10.8315 21.7417 10.8652 21.8723 10.9252C22.0028 10.9852 22.1203 11.0704 22.2179 11.1758C22.3156 11.2812 22.3915 11.4049 22.4413 11.5396C22.4912 11.6744 22.514 11.8176 22.5084 11.9612L22.2046 19.948C22.1937 20.2304 22.074 20.4978 21.8704 20.6939C21.6668 20.89 21.3952 20.9997 21.1125 20.9999ZM21.0979 20.2707C21.1458 20.2725 21.1936 20.265 21.2385 20.2483C21.2835 20.2317 21.3247 20.2064 21.3599 20.1738C21.3951 20.1413 21.4235 20.1021 21.4435 20.0585C21.4635 20.015 21.4747 19.9679 21.4765 19.92L21.7804 11.9333C21.7822 11.8854 21.7747 11.8376 21.758 11.7926C21.7414 11.7477 21.7161 11.7064 21.6835 11.6713C21.651 11.6361 21.6118 11.6077 21.5682 11.5877C21.5247 11.5677 21.4776 11.5565 21.4297 11.5547L1.41423 10.7883C1.36619 10.7861 1.31819 10.7934 1.27299 10.8099C1.22779 10.8263 1.18628 10.8515 1.15087 10.884C1.11545 10.9166 1.08682 10.9558 1.06662 10.9994C1.04643 11.0431 1.03506 11.0903 1.03319 11.1384L0.729327 19.1251C0.727456 19.173 0.735045 19.2208 0.751661 19.2657C0.768277 19.3107 0.793593 19.3519 0.826161 19.3871C0.85873 19.4223 0.897911 19.4507 0.941465 19.4707C0.985018 19.4907 1.03209 19.5019 1.07999 19.5037L21.0979 20.2707Z'
        fill='#1D6855'
      />
      <path
        d='M14.7519 12.3928L18.3095 12.5289C18.5441 12.538 18.5441 12.1734 18.3095 12.1643L14.7519 12.0281C14.5173 12.019 14.5173 12.3836 14.7519 12.3928Z'
        fill='white'
      />
      <path
        d='M19.246 12.5489L20.9926 12.6158C21.2272 12.6249 21.2272 12.2603 20.9926 12.2512L19.246 12.1843C19.0114 12.1752 19.0114 12.5398 19.246 12.5489Z'
        fill='white'
      />
      <path
        d='M14.8894 8.35376L18.3492 7.51388C18.5771 7.45857 18.4804 7.1067 18.2519 7.162L14.7921 8.00188C14.5642 8.05719 14.6609 8.40906 14.8894 8.35376Z'
        fill='white'
      />
      <path
        d='M19.2546 7.27809L20.9532 6.86727C21.1811 6.81197 21.0845 6.46009 20.856 6.5154L19.1574 6.92804C18.9295 6.98335 19.0261 7.33522 19.2546 7.27992V7.27809Z'
        fill='white'
      />
      <path
        d='M1.76236 18.7471L5.32 18.8833C5.55458 18.8924 5.55458 18.5277 5.32 18.5186L1.76236 18.3825C1.52778 18.3734 1.52778 18.738 1.76236 18.7471Z'
        fill='white'
      />
      <path
        d='M6.25968 18.9003L8.00628 18.9672C8.24087 18.9763 8.24087 18.6117 8.00628 18.6025L6.25968 18.5357C6.02509 18.5266 6.02509 18.8912 6.25968 18.9003Z'
        fill='white'
      />
      <path
        d='M11.7151 16.0507C11.7285 15.7036 11.5371 15.4642 11.1117 15.2898C10.8005 15.1512 10.6662 15.0832 10.6723 14.9251C10.6765 14.8097 10.7969 14.6979 11.0369 14.7076C11.2123 14.7111 11.3842 14.7574 11.5377 14.8425L11.6811 14.4055C11.5105 14.3148 11.3212 14.2646 11.1281 14.2591L11.1445 13.8337L10.7233 13.8173L10.7051 14.2858C10.3405 14.3745 10.1229 14.6286 10.1101 14.9543C10.0962 15.3123 10.3532 15.5432 10.7555 15.7061C11.0466 15.8118 11.1585 15.9115 11.153 16.0586C11.1463 16.2269 11.0059 16.3272 10.7531 16.3174C10.5404 16.3059 10.3329 16.2476 10.1454 16.1467L10.002 16.5946C10.1912 16.691 10.3979 16.7482 10.6097 16.7629L10.5933 17.1883L11.0144 17.2047L11.0187 17.0996L11.0321 16.7502C11.4812 16.6699 11.7024 16.3855 11.7151 16.0507Z'
        fill='#91CD86'
      />
      <path
        d='M10.8691 18.5406C10.8286 18.5406 10.7895 18.5406 10.7518 18.5406C10.1538 18.5176 9.57601 18.3179 9.0915 17.9666C8.607 17.6153 8.23755 17.1283 8.02986 16.567C7.82217 16.0057 7.78557 15.3955 7.9247 14.8135C8.06383 14.2314 8.37243 13.7037 8.81148 13.297C9.25053 12.8903 9.80031 12.623 10.3913 12.5288C10.9823 12.4345 11.588 12.5177 12.1317 12.7677C12.6754 13.0177 13.1328 13.4233 13.446 13.9333C13.7592 14.4432 13.9142 15.0346 13.8913 15.6326C13.86 16.4135 13.528 17.1522 12.9648 17.6941C12.4016 18.236 11.6507 18.5393 10.8691 18.5406ZM10.8691 13.0965C10.2448 13.1096 9.64977 13.3636 9.20854 13.8055C8.76731 14.2473 8.51411 14.8427 8.50193 15.467C8.48976 16.0913 8.71957 16.6961 9.14324 17.1549C9.56691 17.6136 10.1516 17.8906 10.7749 17.928H10.8685C11.4934 17.9269 12.0937 17.6842 12.5438 17.2508C12.9939 16.8173 13.259 16.2266 13.2836 15.6022C13.2958 15.2848 13.2454 14.9682 13.1352 14.6703C13.025 14.3724 12.8572 14.0992 12.6414 13.8662C12.4256 13.6331 12.166 13.4449 11.8774 13.3122C11.5889 13.1796 11.277 13.105 10.9597 13.0929L10.8691 13.0965Z'
        fill='#91CD86'
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15344'>
        <rect width='24.0149' height='21' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const WalletIcon: React.FC<IconProps> = () => (
  <svg width='21' height='21' viewBox='0 0 21 21' fill='none' xmlns='http://www.w3.org/2000/svg'>
    <g clipPath='url(#clip0_8809_15378)'>
      <path
        d='M19.4273 14.8563H15.8666C15.7719 14.8575 15.6779 14.8399 15.59 14.8044C15.5021 14.769 15.4222 14.7164 15.3549 14.6497C15.2876 14.583 15.2342 14.5036 15.1979 14.4161C15.1615 14.3286 15.143 14.2347 15.1433 14.14V11.9933C15.143 11.8986 15.1615 11.8047 15.1979 11.7172C15.2342 11.6297 15.2876 11.5503 15.3549 11.4836C15.4222 11.4169 15.5021 11.3643 15.59 11.3288C15.6779 11.2934 15.7719 11.2757 15.8666 11.277H19.4366C19.5306 11.277 19.6236 11.2955 19.7104 11.3315C19.7972 11.3676 19.876 11.4204 19.9423 11.4869C20.0087 11.5535 20.0612 11.6325 20.097 11.7194C20.1327 11.8063 20.151 11.8994 20.1506 11.9933V14.14C20.151 14.2347 20.1324 14.3286 20.0961 14.4161C20.0598 14.5036 20.0064 14.583 19.9391 14.6497C19.8717 14.7164 19.7918 14.769 19.704 14.8044C19.6161 14.8399 19.5221 14.8575 19.4273 14.8563Z'
        fill='#94D5D2'
      />
      <path
        d='M15.8666 14.8563C15.7719 14.8576 15.6779 14.8399 15.59 14.8045C15.5021 14.769 15.4222 14.7164 15.3549 14.6497C15.2876 14.583 15.2342 14.5036 15.1979 14.4161C15.1615 14.3286 15.143 14.2347 15.1433 14.14V11.9933C15.143 11.8986 15.1615 11.8047 15.1979 11.7172C15.2342 11.6297 15.2876 11.5503 15.3549 11.4836C15.4222 11.4169 15.5021 11.3643 15.59 11.3289C15.6779 11.2934 15.7719 11.2757 15.8666 11.277H19.4366V6.98365C19.4366 6.60471 19.2863 6.24125 19.0185 5.97308C18.7508 5.70491 18.3876 5.55394 18.0086 5.55332H2.28664C1.9077 5.5527 1.54449 5.40173 1.27675 5.13356C1.00902 4.86539 0.858642 4.50193 0.858643 4.12299V19.1497C0.858642 19.5286 1.00902 19.8921 1.27675 20.1602C1.54449 20.4284 1.9077 20.5794 2.28664 20.58H17.9993C18.3783 20.5794 18.7415 20.4284 19.0092 20.1602C19.2769 19.8921 19.4273 19.5286 19.4273 19.1497V14.8563H15.8666Z'
        fill='#FF8898'
      />
      <path
        d='M17.9993 5.55337H2.28664C1.9077 5.55275 1.54449 5.40178 1.27675 5.13361C1.00902 4.86544 0.858644 4.50198 0.858644 4.12304C0.858338 3.9352 0.895031 3.74915 0.966629 3.57549C1.03823 3.40184 1.14333 3.24399 1.27593 3.11095C1.40853 2.97792 1.56604 2.8723 1.73946 2.80014C1.91288 2.72797 2.09881 2.69067 2.28664 2.69037H16.5666C16.9456 2.69099 17.3088 2.84196 17.5765 3.11013C17.8443 3.3783 17.9946 3.74176 17.9946 4.1207L17.9993 5.55337Z'
        fill='#E07885'
      />
      <path d='M3.66089 0.471313H12.8846V5.40631H3.66089V0.471313Z' fill='#FFEB97' />
      <path d='M6.99292 4.12299H16.4429V5.40865H6.99292V4.12299Z' fill='white' />
      <path
        d='M19.4273 15.2763H15.8667C15.5657 15.2757 15.2773 15.1557 15.0647 14.9427C14.8521 14.7296 14.7327 14.441 14.7327 14.14V11.9933C14.7327 11.6924 14.8521 11.4037 15.0647 11.1906C15.2773 10.9776 15.5657 10.8576 15.8667 10.857H19.4367C19.7376 10.8576 20.0261 10.9776 20.2387 11.1906C20.4513 11.4037 20.5707 11.6924 20.5707 11.9933V14.14C20.5707 14.2898 20.541 14.4381 20.4835 14.5765C20.426 14.7148 20.3416 14.8404 20.2354 14.946C20.1291 15.0516 20.003 15.1352 19.8643 15.1918C19.7257 15.2485 19.5771 15.2773 19.4273 15.2763ZM15.8667 11.697C15.7885 11.6976 15.7137 11.7291 15.6586 11.7846C15.6036 11.8401 15.5727 11.9151 15.5727 11.9933V14.14C15.5727 14.2182 15.6036 14.2932 15.6586 14.3487C15.7137 14.4042 15.7885 14.4357 15.8667 14.4363H19.4367C19.5149 14.4357 19.5896 14.4042 19.6447 14.3487C19.6998 14.2932 19.7307 14.2182 19.7307 14.14V11.9933C19.7307 11.9151 19.6998 11.8401 19.6447 11.7846C19.5896 11.7291 19.5149 11.6976 19.4367 11.697H15.8667Z'
        fill='#576065'
      />
      <path
        d='M17.9994 21H2.28672C1.79658 20.9988 1.32689 20.8034 0.980527 20.4565C0.634159 20.1097 0.439336 19.6398 0.438721 19.1497V4.123C0.438721 4.01161 0.482971 3.90478 0.561736 3.82602C0.640501 3.74725 0.74733 3.703 0.858721 3.703C0.970112 3.703 1.07694 3.74725 1.15571 3.82602C1.23447 3.90478 1.27872 4.01161 1.27872 4.123C1.27872 4.39056 1.38485 4.64719 1.57382 4.83659C1.76278 5.026 2.01917 5.13272 2.28672 5.13334H17.9994C18.4895 5.13457 18.9592 5.32999 19.3056 5.67679C19.652 6.0236 19.8468 6.49352 19.8474 6.98367V11.277C19.8474 11.3884 19.8031 11.4952 19.7244 11.574C19.6456 11.6528 19.5388 11.697 19.4274 11.697H15.8667C15.7885 11.6976 15.7138 11.7291 15.6587 11.7846C15.6036 11.8401 15.5727 11.9151 15.5727 11.9933V14.14C15.5727 14.2182 15.6036 14.2932 15.6587 14.3487C15.7138 14.4042 15.7885 14.4357 15.8667 14.4363H19.4367C19.5481 14.4363 19.6549 14.4806 19.7337 14.5594C19.8125 14.6381 19.8567 14.7449 19.8567 14.8563V19.1497C19.8564 19.3932 19.8081 19.6342 19.7146 19.859C19.621 20.0838 19.4841 20.288 19.3116 20.4598C19.1391 20.6317 18.9344 20.7679 18.7093 20.8605C18.4841 20.9532 18.2429 21.0006 17.9994 21ZM1.27872 5.67234V19.1497C1.27872 19.4172 1.38485 19.6739 1.57382 19.8633C1.76278 20.0527 2.01917 20.1594 2.28672 20.16H17.9994C18.2669 20.1594 18.5233 20.0527 18.7123 19.8633C18.9013 19.6739 19.0074 19.4172 19.0074 19.1497V15.2763H15.8667C15.5658 15.2757 15.2773 15.1557 15.0647 14.9427C14.8521 14.7297 14.7327 14.441 14.7327 14.14V11.9933C14.7327 11.6924 14.8521 11.4037 15.0647 11.1907C15.2773 10.9776 15.5658 10.8576 15.8667 10.857H19.0167V6.98367C19.0167 6.71612 18.9106 6.45949 18.7216 6.27008C18.5327 6.08067 18.2763 5.97395 18.0087 5.97334H2.28672C1.92856 5.97345 1.57818 5.86882 1.27872 5.67234Z'
        fill='#576065'
      />
      <path
        d='M17.9992 5.97333H2.28656C1.79551 5.97333 1.32457 5.77826 0.97735 5.43103C0.630127 5.08381 0.435059 4.61287 0.435059 4.12183C0.435059 3.63078 0.630127 3.15984 0.97735 2.81262C1.32457 2.46539 1.79551 2.27032 2.28656 2.27032H3.66089C3.77228 2.27032 3.87911 2.31457 3.95788 2.39334C4.03664 2.47211 4.08089 2.57893 4.08089 2.69032C4.08089 2.80172 4.03664 2.90854 3.95788 2.98731C3.87911 3.06608 3.77228 3.11032 3.66089 3.11032H2.28656C2.01829 3.11032 1.76101 3.21689 1.57132 3.40659C1.38163 3.59628 1.27506 3.85356 1.27506 4.12183C1.27506 4.39009 1.38163 4.64737 1.57132 4.83706C1.76101 5.02676 2.01829 5.13333 2.28656 5.13333H17.5792V4.12299C17.5795 3.98992 17.5536 3.8581 17.5028 3.7351C17.452 3.6121 17.3774 3.50034 17.2833 3.40624C17.1892 3.31215 17.0775 3.23757 16.9545 3.18678C16.8315 3.136 16.6996 3.11002 16.5666 3.11032H12.8846C12.7732 3.11032 12.6663 3.06608 12.5876 2.98731C12.5088 2.90854 12.4646 2.80172 12.4646 2.69032C12.4646 2.57893 12.5088 2.47211 12.5876 2.39334C12.6663 2.31457 12.7732 2.27032 12.8846 2.27032H16.5666C17.0567 2.27156 17.5264 2.46697 17.8728 2.81378C18.2191 3.16058 18.4139 3.63051 18.4146 4.12066V5.55333C18.4146 5.66391 18.371 5.77004 18.2932 5.84867C18.2154 5.9273 18.1098 5.9721 17.9992 5.97333Z'
        fill='#576065'
      />
      <path
        d='M16.9284 13.8437C16.7747 13.8437 16.6245 13.7981 16.4967 13.7127C16.3689 13.6273 16.2693 13.506 16.2105 13.364C16.1517 13.222 16.1363 13.0658 16.1663 12.9151C16.1963 12.7644 16.2703 12.6259 16.3789 12.5173C16.4876 12.4086 16.6261 12.3346 16.7768 12.3046C16.9275 12.2746 17.0837 12.29 17.2257 12.3488C17.3677 12.4076 17.489 12.5072 17.5744 12.635C17.6598 12.7628 17.7054 12.913 17.7054 13.0667C17.7048 13.2726 17.6227 13.4698 17.4771 13.6154C17.3315 13.761 17.1343 13.8431 16.9284 13.8437ZM16.9284 13.0037C16.9117 13.0037 16.8956 13.0103 16.8838 13.0221C16.872 13.0339 16.8654 13.05 16.8654 13.0667C16.8654 13.1343 16.9914 13.1343 16.9914 13.0667C16.9914 13.05 16.9847 13.0339 16.9729 13.0221C16.9611 13.0103 16.9451 13.0037 16.9284 13.0037Z'
        fill='#576065'
      />
      <path
        d='M4.08097 5.565H3.24097V1.036C3.24097 0.761236 3.35012 0.497725 3.5444 0.303437C3.73869 0.10915 4.0022 0 4.27697 0L12.2686 0C12.5426 0.00123404 12.8049 0.110928 12.9982 0.305082C13.1915 0.499236 13.3 0.762042 13.3 1.036V4.23967H12.46V1.036C12.46 0.984419 12.4396 0.934916 12.4034 0.898225C12.3671 0.861535 12.3179 0.840614 12.2663 0.84H4.27697C4.22539 0.840614 4.17613 0.861535 4.13988 0.898225C4.10363 0.934916 4.0833 0.984419 4.0833 1.036L4.08097 5.565Z'
        fill='#576065'
      />
      <path
        d='M16.5667 7.82369C16.5403 7.8257 16.5138 7.8257 16.4874 7.82369C16.4597 7.81943 16.4329 7.81077 16.408 7.79802C16.3819 7.78991 16.3575 7.77728 16.3357 7.76069C16.3131 7.74565 16.292 7.72846 16.2727 7.70936C16.2326 7.67062 16.2008 7.62422 16.179 7.57291C16.1572 7.5216 16.146 7.46643 16.146 7.41069C16.146 7.35495 16.1572 7.29978 16.179 7.24847C16.2008 7.19716 16.2326 7.15076 16.2727 7.11202C16.292 7.09292 16.3131 7.07572 16.3357 7.06069C16.3575 7.0441 16.3819 7.03147 16.408 7.02336C16.4329 7.01041 16.4597 7.00174 16.4874 6.99769C16.5411 6.98498 16.597 6.98498 16.6507 6.99769C16.6783 7.00227 16.705 7.01092 16.73 7.02336C16.7558 7.03239 16.7801 7.04495 16.8024 7.06069L16.8654 7.11202C16.9435 7.19182 16.9872 7.29903 16.9872 7.41069C16.9872 7.52235 16.9435 7.62956 16.8654 7.70936L16.8024 7.76069C16.7801 7.77643 16.7558 7.78899 16.73 7.79802C16.7049 7.81027 16.6782 7.81892 16.6507 7.82369C16.6228 7.82593 16.5947 7.82593 16.5667 7.82369Z'
        fill='white'
      />
      <path
        d='M14.4527 7.40371C14.4527 7.29232 14.4969 7.18549 14.5757 7.10673C14.6544 7.02796 14.7613 6.98371 14.8727 6.98371C14.9281 6.9834 14.9831 6.99402 15.0345 7.01496C15.0858 7.0359 15.1325 7.06676 15.172 7.10576C15.2114 7.14476 15.2428 7.19114 15.2643 7.24227C15.2858 7.29339 15.297 7.34825 15.2973 7.40371C15.297 7.45917 15.2858 7.51403 15.2643 7.56515C15.2428 7.61628 15.2114 7.66266 15.172 7.70166C15.1325 7.74066 15.0858 7.77152 15.0345 7.79246C14.9831 7.8134 14.9281 7.82402 14.8727 7.82371C14.7613 7.82371 14.6544 7.77946 14.5757 7.70069C14.4969 7.62193 14.4527 7.5151 14.4527 7.40371ZM12.761 7.40371C12.7607 7.34847 12.7713 7.29371 12.7923 7.24262C12.8133 7.19152 12.8443 7.1451 12.8833 7.10604C12.9224 7.06697 12.9688 7.03605 13.0199 7.01505C13.071 6.99405 13.1258 6.9834 13.181 6.98371C13.2922 6.98432 13.3987 7.02877 13.4773 7.1074C13.5559 7.18604 13.6004 7.29251 13.601 7.40371C13.6004 7.51491 13.5559 7.62138 13.4773 7.70002C13.3987 7.77865 13.2922 7.8231 13.181 7.82371C13.1256 7.82433 13.0705 7.81391 13.0192 7.79305C12.9678 7.77219 12.9211 7.74132 12.8818 7.70222C12.8425 7.66313 12.8114 7.6166 12.7902 7.56535C12.7691 7.5141 12.7583 7.45915 12.7587 7.40371H12.761ZM11.0647 7.40371C11.0643 7.34847 11.075 7.29371 11.096 7.24262C11.117 7.19152 11.1479 7.1451 11.187 7.10604C11.226 7.06697 11.2725 7.03605 11.3236 7.01505C11.3747 6.99405 11.4294 6.9834 11.4847 6.98371C11.5959 6.98432 11.7023 7.02877 11.781 7.1074C11.8596 7.18604 11.904 7.29251 11.9047 7.40371C11.904 7.51491 11.8596 7.62138 11.781 7.70002C11.7023 7.77865 11.5959 7.8231 11.4847 7.82371C11.4292 7.82433 11.3742 7.81391 11.3228 7.79305C11.2715 7.77219 11.2248 7.74132 11.1855 7.70222C11.1462 7.66313 11.115 7.6166 11.0939 7.56535C11.0727 7.5141 11.062 7.45915 11.0623 7.40371H11.0647ZM9.36833 7.40371C9.36894 7.29251 9.41338 7.18604 9.49202 7.1074C9.57065 7.02877 9.67712 6.98432 9.78833 6.98371C9.89953 6.98432 10.006 7.02877 10.0846 7.1074C10.1633 7.18604 10.2077 7.29251 10.2083 7.40371C10.2077 7.51491 10.1633 7.62138 10.0846 7.70002C10.006 7.77865 9.89953 7.8231 9.78833 7.82371C9.67672 7.82371 9.56965 7.77954 9.49051 7.70084C9.41138 7.62214 9.36661 7.51531 9.36599 7.40371H9.36833ZM7.67199 7.40371C7.6726 7.29251 7.71705 7.18604 7.79568 7.1074C7.87432 7.02877 7.98079 6.98432 8.09199 6.98371C8.20319 6.98432 8.30967 7.02877 8.3883 7.1074C8.46693 7.18604 8.51138 7.29251 8.51199 7.40371C8.51138 7.51491 8.46693 7.62138 8.3883 7.70002C8.30967 7.77865 8.20319 7.8231 8.09199 7.82371C7.98039 7.82371 7.87332 7.77954 7.79418 7.70084C7.71504 7.62214 7.67027 7.51531 7.66966 7.40371H7.67199ZM5.97566 7.40371C5.97627 7.29251 6.02072 7.18604 6.09935 7.1074C6.17798 7.02877 6.28446 6.98432 6.39566 6.98371C6.50686 6.98432 6.61333 7.02877 6.69197 7.1074C6.7706 7.18604 6.81505 7.29251 6.81566 7.40371C6.81505 7.51491 6.7706 7.62138 6.69197 7.70002C6.61333 7.77865 6.50686 7.8231 6.39566 7.82371C6.28405 7.82371 6.17698 7.77954 6.09785 7.70084C6.01871 7.62214 5.97394 7.51531 5.97333 7.40371H5.97566ZM4.27932 7.40371C4.27994 7.29251 4.32438 7.18604 4.40302 7.1074C4.48165 7.02877 4.58812 6.98432 4.69932 6.98371C4.81053 6.98432 4.917 7.02877 4.99563 7.1074C5.07427 7.18604 5.11871 7.29251 5.11933 7.40371C5.11871 7.51491 5.07427 7.62138 4.99563 7.70002C4.917 7.77865 4.81053 7.8231 4.69932 7.82371C4.64386 7.82402 4.58888 7.8134 4.53753 7.79246C4.48617 7.77152 4.43944 7.74066 4.40001 7.70166C4.36057 7.66266 4.3292 7.61628 4.3077 7.56515C4.28619 7.51403 4.27496 7.45917 4.27466 7.40371H4.27932Z'
        fill='white'
      />
      <path
        d='M3.00298 7.8224C2.91942 7.82307 2.83756 7.79881 2.76787 7.7527C2.69817 7.7066 2.64382 7.64076 2.61175 7.56359C2.57968 7.48643 2.57136 7.40146 2.58785 7.31954C2.60434 7.23762 2.64489 7.16248 2.70431 7.10373C2.7847 7.02861 2.89062 6.98682 3.00064 6.98682C3.11067 6.98682 3.21659 7.02861 3.29698 7.10373C3.35611 7.1622 3.39656 7.23691 3.4132 7.31839C3.42983 7.39987 3.4219 7.48446 3.39042 7.56143C3.35893 7.6384 3.3053 7.70429 3.23633 7.75075C3.16735 7.79721 3.08614 7.82214 3.00298 7.8224Z'
        fill='white'
      />
      <path
        d='M16.149 19.1474C16.149 19.036 16.1932 18.9291 16.272 18.8504C16.3508 18.7716 16.4576 18.7274 16.569 18.7274C16.6242 18.7271 16.679 18.7377 16.7301 18.7587C16.7812 18.7797 16.8276 18.8106 16.8667 18.8497C16.9057 18.8887 16.9367 18.9352 16.9576 18.9863C16.9786 19.0374 16.9893 19.0921 16.989 19.1474C16.9896 19.2027 16.9792 19.2576 16.9583 19.3088C16.9374 19.3601 16.9065 19.4066 16.8674 19.4457C16.8282 19.4849 16.7817 19.5158 16.7305 19.5367C16.6792 19.5576 16.6243 19.568 16.569 19.5674C16.5137 19.5677 16.459 19.557 16.4079 19.536C16.3568 19.515 16.3104 19.4841 16.2713 19.445C16.2323 19.406 16.2013 19.3596 16.1803 19.3085C16.1593 19.2574 16.1487 19.2026 16.149 19.1474ZM14.469 19.1474C14.4693 19.0919 14.4805 19.037 14.502 18.9859C14.5235 18.9348 14.5549 18.8884 14.5943 18.8494C14.6338 18.8104 14.6805 18.7796 14.7319 18.7586C14.7832 18.7377 14.8382 18.7271 14.8937 18.7274C14.9485 18.7277 15.0028 18.7388 15.0533 18.76C15.1039 18.7813 15.1497 18.8123 15.1883 18.8513C15.2269 18.8903 15.2574 18.9366 15.2781 18.9873C15.2988 19.0381 15.3093 19.0925 15.309 19.1474C15.3096 19.2023 15.2993 19.2568 15.2787 19.3077C15.2581 19.3587 15.2276 19.405 15.189 19.4441C15.1504 19.4831 15.1044 19.5141 15.0537 19.5353C15.003 19.5565 14.9486 19.5674 14.8937 19.5674C14.8379 19.5683 14.7825 19.5581 14.7308 19.5374C14.679 19.5167 14.6319 19.4859 14.5921 19.4469C14.5524 19.4078 14.5208 19.3611 14.4993 19.3097C14.4777 19.2583 14.4666 19.2031 14.4667 19.1474H14.469ZM12.789 19.1474C12.789 19.036 12.8332 18.9291 12.912 18.8504C12.9908 18.7716 13.0976 18.7274 13.209 18.7274C13.2642 18.7271 13.319 18.7377 13.3701 18.7587C13.4212 18.7797 13.4676 18.8106 13.5067 18.8497C13.5457 18.8887 13.5767 18.9352 13.5976 18.9863C13.6186 19.0374 13.6293 19.0921 13.629 19.1474C13.6296 19.2027 13.6192 19.2576 13.5983 19.3088C13.5774 19.3601 13.5465 19.4066 13.5074 19.4457C13.4682 19.4849 13.4217 19.5158 13.3705 19.5367C13.3192 19.5576 13.2643 19.568 13.209 19.5674C13.1537 19.5677 13.099 19.557 13.0479 19.536C12.9968 19.515 12.9504 19.4841 12.9113 19.445C12.8723 19.406 12.8413 19.3596 12.8203 19.3085C12.7993 19.2574 12.7887 19.2026 12.789 19.1474ZM11.109 19.1474C11.109 19.036 11.1532 18.9291 11.232 18.8504C11.3108 18.7716 11.4176 18.7274 11.529 18.7274C11.5842 18.7271 11.639 18.7377 11.6901 18.7587C11.7412 18.7797 11.7876 18.8106 11.8267 18.8497C11.8657 18.8887 11.8967 18.9352 11.9176 18.9863C11.9386 19.0374 11.9493 19.0921 11.949 19.1474C11.9496 19.2027 11.9392 19.2576 11.9183 19.3088C11.8974 19.3601 11.8665 19.4066 11.8274 19.4457C11.7882 19.4849 11.7417 19.5158 11.6905 19.5367C11.6392 19.5576 11.5843 19.568 11.529 19.5674C11.4737 19.5677 11.419 19.557 11.3679 19.536C11.3168 19.515 11.2704 19.4841 11.2313 19.445C11.1923 19.406 11.1613 19.3596 11.1403 19.3085C11.1193 19.2574 11.1087 19.2026 11.109 19.1474ZM9.42899 19.1474C9.4293 19.0919 9.44052 19.037 9.46203 18.9859C9.48354 18.9348 9.5149 18.8884 9.55434 18.8494C9.59377 18.8104 9.6405 18.7796 9.69186 18.7586C9.74322 18.7377 9.79819 18.7271 9.85366 18.7274C9.96402 18.7286 10.0694 18.7735 10.1468 18.8522C10.2242 18.9309 10.2673 19.037 10.2667 19.1474C10.2673 19.2023 10.257 19.2568 10.2364 19.3077C10.2158 19.3587 10.1853 19.405 10.1467 19.4441C10.108 19.4831 10.062 19.5141 10.0113 19.5353C9.96065 19.5565 9.90626 19.5674 9.85132 19.5674C9.79597 19.5677 9.74111 19.557 9.68988 19.5361C9.63865 19.5151 9.59208 19.4842 9.55283 19.4452C9.51358 19.4061 9.48243 19.3597 9.46118 19.3086C9.43993 19.2575 9.42899 19.2027 9.42899 19.1474ZM7.74899 19.1474C7.74899 19.036 7.79324 18.9291 7.87201 18.8504C7.95077 18.7716 8.0576 18.7274 8.16899 18.7274C8.22423 18.7271 8.27899 18.7377 8.33008 18.7587C8.38118 18.7797 8.4276 18.8106 8.46666 18.8497C8.50573 18.8887 8.53665 18.9352 8.55765 18.9863C8.57865 19.0374 8.5893 19.0921 8.58899 19.1474C8.58962 19.2027 8.57918 19.2576 8.55829 19.3088C8.53741 19.3601 8.50649 19.4066 8.46737 19.4457C8.42824 19.4849 8.38169 19.5158 8.33045 19.5367C8.27921 19.5576 8.22432 19.568 8.16899 19.5674C8.11375 19.5677 8.05899 19.557 8.0079 19.536C7.9568 19.515 7.91038 19.4841 7.87132 19.445C7.83225 19.406 7.80133 19.3596 7.78033 19.3085C7.75933 19.2574 7.74868 19.2026 7.74899 19.1474ZM6.06899 19.1474C6.06899 19.036 6.11324 18.9291 6.19201 18.8504C6.27077 18.7716 6.3776 18.7274 6.48899 18.7274C6.54423 18.7271 6.59899 18.7377 6.65008 18.7587C6.70118 18.7797 6.7476 18.8106 6.78666 18.8497C6.82573 18.8887 6.85665 18.9352 6.87765 18.9863C6.89865 19.0374 6.9093 19.0921 6.90899 19.1474C6.90962 19.2027 6.89918 19.2576 6.87829 19.3088C6.85741 19.3601 6.82649 19.4066 6.78737 19.4457C6.74824 19.4849 6.70169 19.5158 6.65045 19.5367C6.59922 19.5576 6.54432 19.568 6.48899 19.5674C6.43355 19.568 6.37855 19.5576 6.32718 19.5367C6.27581 19.5158 6.22911 19.485 6.1898 19.4459C6.15049 19.4068 6.11936 19.3603 6.09821 19.309C6.07707 19.2577 6.06634 19.2028 6.06666 19.1474H6.06899ZM4.38899 19.1474C4.38899 19.036 4.43324 18.9291 4.51201 18.8504C4.59077 18.7716 4.6976 18.7274 4.80899 18.7274C4.86423 18.7271 4.91899 18.7377 4.97008 18.7587C5.02118 18.7797 5.0676 18.8106 5.10667 18.8497C5.14573 18.8887 5.17665 18.9352 5.19765 18.9863C5.21865 19.0374 5.2293 19.0921 5.22899 19.1474C5.22962 19.2027 5.21918 19.2576 5.19829 19.3088C5.17741 19.3601 5.14649 19.4066 5.10737 19.4457C5.06824 19.4849 5.02169 19.5158 4.97045 19.5367C4.91922 19.5576 4.86432 19.568 4.80899 19.5674C4.75375 19.5677 4.69899 19.557 4.6479 19.536C4.5968 19.515 4.55038 19.4841 4.51132 19.445C4.47225 19.406 4.44133 19.3596 4.42033 19.3085C4.39933 19.2574 4.38868 19.2026 4.38899 19.1474ZM2.70899 19.1474C2.70899 19.036 2.75324 18.9291 2.83201 18.8504C2.91077 18.7716 3.0176 18.7274 3.12899 18.7274C3.18423 18.7271 3.23899 18.7377 3.29008 18.7587C3.34118 18.7797 3.3876 18.8106 3.42667 18.8497C3.46573 18.8887 3.49665 18.9352 3.51765 18.9863C3.53865 19.0374 3.5493 19.0921 3.54899 19.1474C3.54962 19.2027 3.53918 19.2576 3.51829 19.3088C3.49741 19.3601 3.46649 19.4066 3.42737 19.4457C3.38824 19.4849 3.34169 19.5158 3.29045 19.5367C3.23922 19.5576 3.18432 19.568 3.12899 19.5674C3.07375 19.5677 3.01899 19.557 2.9679 19.536C2.9168 19.515 2.87038 19.4841 2.83132 19.445C2.79225 19.406 2.76133 19.3596 2.74033 19.3085C2.71933 19.2574 2.70868 19.2026 2.70899 19.1474Z'
        fill='white'
      />
      <path
        d='M17.6399 9.08371C17.6405 8.97251 17.685 8.86604 17.7636 8.7874C17.8422 8.70877 17.9487 8.66432 18.0599 8.66371C18.1151 8.6634 18.1699 8.67405 18.221 8.69505C18.2721 8.71605 18.3185 8.74697 18.3576 8.78604C18.3966 8.8251 18.4276 8.87152 18.4486 8.92262C18.4695 8.97371 18.4802 9.02847 18.4799 9.08371C18.4802 9.13895 18.4695 9.19371 18.4486 9.2448C18.4276 9.2959 18.3966 9.34232 18.3576 9.38138C18.3185 9.42045 18.2721 9.45137 18.221 9.47237C18.1699 9.49337 18.1151 9.50402 18.0599 9.50371C17.9487 9.5031 17.8422 9.45865 17.7636 9.38002C17.685 9.30138 17.6405 9.19491 17.6399 9.08371ZM17.6399 7.40371C17.6405 7.29251 17.685 7.18604 17.7636 7.1074C17.8422 7.02877 17.9487 6.98432 18.0599 6.98371C18.1151 6.9834 18.1699 6.99405 18.221 7.01505C18.2721 7.03605 18.3185 7.06697 18.3576 7.10604C18.3966 7.1451 18.4276 7.19152 18.4486 7.24262C18.4695 7.29371 18.4802 7.34847 18.4799 7.40371C18.4802 7.45895 18.4695 7.51371 18.4486 7.5648C18.4276 7.6159 18.3966 7.66232 18.3576 7.70138C18.3185 7.74045 18.2721 7.77137 18.221 7.79237C18.1699 7.81337 18.1151 7.82402 18.0599 7.82371C17.9487 7.8231 17.8422 7.77865 17.7636 7.70002C17.685 7.62138 17.6405 7.51491 17.6399 7.40371Z'
        fill='white'
      />
      <path
        d='M17.6399 19.005C17.6405 18.8938 17.685 18.7874 17.7636 18.7087C17.8422 18.6301 17.9487 18.5856 18.0599 18.585C18.1151 18.5847 18.1699 18.5954 18.221 18.6164C18.2721 18.6374 18.3185 18.6683 18.3576 18.7074C18.3966 18.7464 18.4276 18.7928 18.4486 18.8439C18.4695 18.895 18.4802 18.9498 18.4799 19.005C18.4802 19.0603 18.4695 19.115 18.4486 19.1661C18.4276 19.2172 18.3966 19.2636 18.3576 19.3027C18.3185 19.3418 18.2721 19.3727 18.221 19.3937C18.1699 19.4147 18.1151 19.4253 18.0599 19.425C17.9487 19.4244 17.8422 19.38 17.7636 19.3013C17.685 19.2227 17.6405 19.1162 17.6399 19.005ZM17.6399 17.325C17.6405 17.2138 17.685 17.1074 17.7636 17.0287C17.8422 16.9501 17.9487 16.9056 18.0599 16.905C18.1151 16.9047 18.1699 16.9154 18.221 16.9364C18.2721 16.9574 18.3185 16.9883 18.3576 17.0274C18.3966 17.0664 18.4276 17.1128 18.4486 17.1639C18.4695 17.215 18.4802 17.2698 18.4799 17.325C18.4802 17.3803 18.4695 17.435 18.4486 17.4861C18.4276 17.5372 18.3966 17.5836 18.3576 17.6227C18.3185 17.6618 18.2721 17.6927 18.221 17.7137C18.1699 17.7347 18.1151 17.7453 18.0599 17.745C17.9487 17.7444 17.8422 17.7 17.7636 17.6213C17.685 17.5427 17.6405 17.4362 17.6399 17.325Z'
        fill='white'
      />
      <path
        d='M17.1149 5.67937H16.2749V4.55704C16.2749 4.49516 16.2503 4.43581 16.2066 4.39205C16.1628 4.34829 16.1035 4.32371 16.0416 4.32371H7.37558C7.3137 4.32371 7.25435 4.34829 7.21059 4.39205C7.16683 4.43581 7.14225 4.49516 7.14225 4.55704V5.67937H6.30225V4.55704C6.30316 4.41712 6.33167 4.27875 6.38613 4.14985C6.4406 4.02096 6.51995 3.90408 6.61965 3.80589C6.71935 3.70771 6.83744 3.63016 6.96715 3.57767C7.09687 3.52519 7.23566 3.49881 7.37558 3.50004H16.0532C16.335 3.50066 16.6051 3.61303 16.8041 3.8125C17.0031 4.01197 17.1149 4.28225 17.1149 4.56404V5.67937Z'
        fill='#576065'
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15378'>
        <rect width='21' height='21' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const CartIcon2: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '13'}
    height={width || '13'}
    viewBox='0 0 14 13'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M12.3308 8.61859L12.368 8.48662L12.3944 8.37639L12.6009 7.5054L13.0201 5.76497L13.2328 4.89553L13.2592 4.78685C13.2669 4.75114 13.2809 4.69525 13.2871 4.65023C13.3042 4.55397 13.3104 4.45616 13.3089 4.35834C13.3073 4.16272 13.2669 3.9671 13.194 3.78389C13.0511 3.41749 12.767 3.10542 12.413 2.92533C12.236 2.83528 12.042 2.77628 11.8432 2.75454C11.7936 2.74833 11.7439 2.74523 11.6942 2.74367L11.5809 2.74057L11.3573 2.73591L9.56718 2.69089C8.37481 2.65673 7.18088 2.61326 5.99007 2.56047C5.11131 2.52166 3.92049 2.47663 3.47646 2.84149L3.37399 2.39745L3.32276 2.17388L3.29636 2.0621L3.2591 1.92547C3.20942 1.73916 3.13179 1.56062 3.04329 1.38984C2.85699 1.05138 2.60236 0.750179 2.28875 0.523504C2.08536 0.372905 1.83695 0.225411 1.56525 0.130704C1.2951 0.0344453 1.00477 -0.0136842 0.748599 0.00339403C0.332511 0.0344454 0.0297607 0.14002 0.00181454 0.425692C-0.0261317 0.734653 0.271961 0.844885 0.672523 0.880594C0.857279 0.897673 1.03427 0.914751 1.21903 0.964433C1.40068 1.01101 1.57456 1.08709 1.70809 1.17869C1.91302 1.32463 2.09468 1.50938 2.22199 1.72674C2.28719 1.83387 2.33998 1.94876 2.38035 2.06831C2.40364 2.12731 2.4145 2.18941 2.43313 2.24996L2.48282 2.46887L2.87717 4.21551L3.67985 7.70723L3.78076 8.1435L3.832 8.36242L3.85684 8.4711L3.89255 8.60151C3.99967 8.95084 4.21082 9.26911 4.49805 9.49889C4.78372 9.72867 5.13926 9.86996 5.50256 9.89946L5.63919 9.90567H5.75408H5.97765H6.42478H10.0066H10.4537H10.5655L10.7021 9.89946C10.7937 9.89169 10.8838 9.88083 10.9738 9.85909C11.3309 9.77836 11.6647 9.59205 11.9131 9.32345C12.0389 9.18993 12.1444 9.03778 12.2252 8.87321C12.2671 8.79092 12.2997 8.70553 12.3292 8.61859H12.3308ZM11.7811 6.97132L11.5902 7.82523L11.4939 8.25218C11.4691 8.3562 11.4411 8.43228 11.3961 8.51612C11.3107 8.67914 11.171 8.81111 11.0095 8.8996C10.9288 8.94308 10.8403 8.97568 10.7502 8.99121C10.654 9.00828 10.5903 9.01139 10.4211 9.00984H6.75859H5.84257H5.72768C5.68887 9.00984 5.6485 9.00984 5.62987 9.00828C5.58019 9.00828 5.53206 9.00052 5.48548 8.99431C5.38922 8.97878 5.29917 8.94463 5.21378 8.90116C5.04455 8.81111 4.90327 8.66982 4.81477 8.49904C4.79304 8.45557 4.77441 8.4121 4.75888 8.36552C4.74491 8.31739 4.73404 8.28323 4.71386 8.19629L4.61139 7.7507L3.78853 4.18135L3.65811 3.61932C4.17511 3.82737 5.15478 3.79321 5.88449 3.79476L9.38863 3.78855L11.1399 3.77613L11.5778 3.77303H11.688C11.7082 3.77303 11.7252 3.77303 11.7439 3.77303C11.7811 3.77613 11.8184 3.78079 11.8541 3.7901C12.0001 3.82581 12.1305 3.91742 12.2174 4.04007C12.3044 4.16272 12.3478 4.31953 12.3323 4.47168C12.3307 4.51826 12.2857 4.69836 12.2578 4.83343L12.1631 5.26039L11.7827 6.96976L11.7811 6.97132Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
    <path
      d='M10.7068 12.2454C10.5965 13.3276 12.354 13.1878 12.0466 12.1957C11.9131 11.421 10.7596 11.4505 10.7068 12.2454Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
    <path
      d='M3.62706 12.2454C3.51682 13.3276 5.27433 13.1878 4.96692 12.1957C4.8334 11.421 3.67984 11.4505 3.62706 12.2454Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const ScissorsIcon: React.FC<IconProps> = ({ width, onClick }) => (
  <svg
    width={width || '15'}
    height={width || '15'}
    viewBox='0 0 15 15'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8809_15547)'>
      <path
        d='M11.875 8.75044C11.3606 8.75382 10.8552 8.88597 10.405 9.13482L8.3125 6.62544L12.9794 1.02544C13.0808 0.897625 13.1282 0.735217 13.1115 0.572914C13.0948 0.41061 13.0152 0.26128 12.8899 0.156826C12.7645 0.0523718 12.6033 0.00107582 12.4407 0.0138968C12.278 0.0267177 12.1268 0.102639 12.0194 0.225441L7.5 5.64919L2.98 0.225441C2.87257 0.102639 2.72137 0.0267177 2.55872 0.0138968C2.39606 0.00107582 2.23483 0.0523718 2.10949 0.156826C1.98414 0.26128 1.90462 0.41061 1.88789 0.572914C1.87117 0.735217 1.91859 0.897625 2.02 1.02544L6.6875 6.62544L4.595 9.13482C4.14466 8.88626 3.63937 8.75414 3.125 8.75044C2.50694 8.75044 1.90275 8.93372 1.38884 9.2771C0.874941 9.62048 0.474402 10.1085 0.237878 10.6796C0.00135401 11.2506 -0.0605314 11.8789 0.0600474 12.4851C0.180626 13.0913 0.478254 13.6481 0.915293 14.0852C1.35233 14.5222 1.90915 14.8198 2.51534 14.9404C3.12154 15.061 3.74987 14.9991 4.32089 14.7626C4.89191 14.526 5.37996 14.1255 5.72334 13.6116C6.06672 13.0977 6.25 12.4935 6.25 11.8754C6.24642 11.1692 6.00116 10.4854 5.555 9.93794L7.5 7.60169L9.44438 9.93794C8.9988 10.4857 8.75381 11.1693 8.75 11.8754C8.75 12.4935 8.93328 13.0977 9.27666 13.6116C9.62004 14.1255 10.1081 14.526 10.6791 14.7626C11.2501 14.9991 11.8785 15.061 12.4847 14.9404C13.0909 14.8198 13.6477 14.5222 14.0847 14.0852C14.5218 13.6481 14.8194 13.0913 14.94 12.4851C15.0605 11.8789 14.9987 11.2506 14.7621 10.6796C14.5256 10.1085 14.1251 9.62048 13.6112 9.2771C13.0973 8.93372 12.4931 8.75044 11.875 8.75044V8.75044ZM3.125 13.7504C2.75416 13.7504 2.39165 13.6405 2.08331 13.4344C1.77497 13.2284 1.53464 12.9356 1.39273 12.593C1.25081 12.2504 1.21368 11.8734 1.28603 11.5096C1.35838 11.1459 1.53695 10.8118 1.79918 10.5496C2.0614 10.2874 2.39549 10.1088 2.75921 10.0365C3.12292 9.96412 3.49992 10.0013 3.84253 10.1432C4.18514 10.2851 4.47798 10.5254 4.68401 10.8337C4.89003 11.1421 5 11.5046 5 11.8754C5 12.3727 4.80246 12.8496 4.45083 13.2013C4.0992 13.5529 3.62228 13.7504 3.125 13.7504ZM11.875 13.7504C11.5042 13.7504 11.1417 13.6405 10.8333 13.4344C10.525 13.2284 10.2846 12.9356 10.1427 12.593C10.0008 12.2504 9.96368 11.8734 10.036 11.5096C10.1084 11.1459 10.287 10.8118 10.5492 10.5496C10.8114 10.2874 11.1455 10.1088 11.5092 10.0365C11.8729 9.96412 12.2499 10.0013 12.5925 10.1432C12.9351 10.2851 13.228 10.5254 13.434 10.8337C13.64 11.1421 13.75 11.5046 13.75 11.8754C13.75 12.3727 13.5525 12.8496 13.2008 13.2013C12.8492 13.5529 12.3723 13.7504 11.875 13.7504Z'
        fill='white'
      />
    </g>
    <defs>
      <clipPath id='clip0_8809_15547'>
        <rect width='15' height='15' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const RightArrowIcon: React.FC<IconProps> = ({ color, onClick, width }) => (
  <svg
    width={width ? (width * 5) / 8 : '5'}
    height={width ? (width * 8) / 5 : '8'}
    viewBox='0 0 5 8'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M0.989423 1.13923C0.703852 1.4248 0.703852 1.8878 0.989423 2.17337L3.03173 4.21567L0.989423 6.25798C0.703852 6.54355 0.703852 7.00655 0.989423 7.29212C1.27499 7.57769 1.738 7.57769 2.02357 7.29212L4.58294 4.73275C4.86851 4.44718 4.86851 3.98417 4.58294 3.6986L2.02357 1.13923C1.738 0.853656 1.27499 0.853656 0.989423 1.13923Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const LeftArrowIcon: React.FC<IconProps> = ({ color, onClick, width }) => (
  <svg
    width={width ? (width * 5) / 8 : '5'}
    height={width ? (width * 8) / 5 : '8'}
    viewBox='0 0 5 8'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset', transform: 'rotate(180deg)' }}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M0.989423 1.13923C0.703852 1.4248 0.703852 1.8878 0.989423 2.17337L3.03173 4.21567L0.989423 6.25798C0.703852 6.54355 0.703852 7.00655 0.989423 7.29212C1.27499 7.57769 1.738 7.57769 2.02357 7.29212L4.58294 4.73275C4.86851 4.44718 4.86851 3.98417 4.58294 3.6986L2.02357 1.13923C1.738 0.853656 1.27499 0.853656 0.989423 1.13923Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const UpArrowIcon: React.FC<IconProps> = ({ width, onClick }) => (
  <svg
    width={width || '16'}
    height={width || '16'}
    viewBox='0 0 16 16'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M5.13778 7.52867L7.33311 5.33333L7.33311 12H8.66644V5.33333L10.8618 7.52867L11.8044 6.586L8.94244 3.724C8.69241 3.47404 8.35333 3.33362 7.99978 3.33362C7.64622 3.33362 7.30715 3.47404 7.05711 3.724L4.19511 6.586L5.13778 7.52867Z'
      fill='white'
    />
  </svg>
)

export const PlusIcon2: React.FC<IconProps> = ({ onClick }) => (
  <svg
    width={'22'}
    height={'22'}
    viewBox='0 0 22 22'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{
      transform: 'scale(0.7)',
      cursor: onClick ? 'pointer' : 'unset',
    }}
  >
    <g clipPath='url(#clip0_8839_7267)'>
      <path
        d='M20.4882 10.0165H12.6344V2.16272C12.6344 1.43981 12.0484 0.85376 11.3255 0.85376C10.6025 0.85376 10.0165 1.43981 10.0165 2.16272V10.0165H2.16272C1.43981 10.0165 0.85376 10.6025 0.85376 11.3255C0.85376 12.0484 1.43981 12.6344 2.16272 12.6344H10.0165V20.4882C10.0165 21.2111 10.6025 21.7972 11.3255 21.7972C12.0484 21.7972 12.6344 21.2111 12.6344 20.4882V12.6344H20.4882C21.2111 12.6344 21.7972 12.0484 21.7972 11.3255C21.7972 10.6025 21.2111 10.0165 20.4882 10.0165Z'
        fill='white'
      />
    </g>
    <defs>
      <clipPath id='clip0_8839_7267'>
        <rect
          width='20.9434'
          height='20.9434'
          fill='white'
          transform='translate(0.85376 0.85376)'
        />
      </clipPath>
    </defs>
  </svg>
)

export const CardIcon: React.FC<IconProps> = ({ onClick, color }) => (
  <svg
    width='15'
    height='12'
    viewBox='0 0 15 12'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M3.83044 8.13709H6.02419C6.21813 8.13709 6.40413 8.06005 6.54127 7.92291C6.6784 7.78578 6.75544 7.59978 6.75544 7.40584C6.75544 7.2119 6.6784 7.02591 6.54127 6.88877C6.40413 6.75163 6.21813 6.67459 6.02419 6.67459H3.83044C3.6365 6.67459 3.45051 6.75163 3.31337 6.88877C3.17624 7.02591 3.09919 7.2119 3.09919 7.40584C3.09919 7.59978 3.17624 7.78578 3.31337 7.92291C3.45051 8.06005 3.6365 8.13709 3.83044 8.13709ZM12.6054 0.824593H2.36794C1.78613 0.824593 1.22814 1.05572 0.816729 1.46713C0.405321 1.87854 0.174194 2.43652 0.174194 3.01834V9.59959C0.174194 10.1814 0.405321 10.7394 0.816729 11.1508C1.22814 11.5622 1.78613 11.7933 2.36794 11.7933H12.6054C13.1873 11.7933 13.7453 11.5622 14.1567 11.1508C14.5681 10.7394 14.7992 10.1814 14.7992 9.59959V3.01834C14.7992 2.43652 14.5681 1.87854 14.1567 1.46713C13.7453 1.05572 13.1873 0.824593 12.6054 0.824593ZM13.3367 9.59959C13.3367 9.79353 13.2597 9.97953 13.1225 10.1167C12.9854 10.2538 12.7994 10.3308 12.6054 10.3308H2.36794C2.174 10.3308 1.98801 10.2538 1.85087 10.1167C1.71374 9.97953 1.63669 9.79353 1.63669 9.59959V5.21209H13.3367V9.59959ZM13.3367 3.74959H1.63669V3.01834C1.63669 2.8244 1.71374 2.63841 1.85087 2.50127C1.98801 2.36413 2.174 2.28709 2.36794 2.28709H12.6054C12.7994 2.28709 12.9854 2.36413 13.1225 2.50127C13.2597 2.63841 13.3367 2.8244 13.3367 3.01834V3.74959Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const GraphicIcon: React.FC<IconProps> = ({ onClick, color }) => (
  <svg
    width='19'
    height='19'
    viewBox='0 0 19 19'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M9.48669 5.18702C9.29275 5.18702 9.10676 5.26406 8.96962 5.40119C8.83249 5.53833 8.75544 5.72433 8.75544 5.91827V13.2308C8.75544 13.4247 8.83249 13.6107 8.96962 13.7478C9.10676 13.885 9.29275 13.962 9.48669 13.962C9.68063 13.962 9.86663 13.885 10.0038 13.7478C10.1409 13.6107 10.2179 13.4247 10.2179 13.2308V5.91827C10.2179 5.72433 10.1409 5.53833 10.0038 5.40119C9.86663 5.26406 9.68063 5.18702 9.48669 5.18702ZM5.83044 9.57452C5.6365 9.57452 5.45051 9.65156 5.31337 9.78869C5.17624 9.92583 5.09919 10.1118 5.09919 10.3058V13.2308C5.09919 13.4247 5.17624 13.6107 5.31337 13.7478C5.45051 13.885 5.6365 13.962 5.83044 13.962C6.02438 13.962 6.21038 13.885 6.34752 13.7478C6.48465 13.6107 6.56169 13.4247 6.56169 13.2308V10.3058C6.56169 10.1118 6.48465 9.92583 6.34752 9.78869C6.21038 9.65156 6.02438 9.57452 5.83044 9.57452ZM13.1429 8.11202C12.949 8.11202 12.763 8.18906 12.6259 8.32619C12.4887 8.46333 12.4117 8.64933 12.4117 8.84327V13.2308C12.4117 13.4247 12.4887 13.6107 12.6259 13.7478C12.763 13.885 12.949 13.962 13.1429 13.962C13.3369 13.962 13.5229 13.885 13.66 13.7478C13.7972 13.6107 13.8742 13.4247 13.8742 13.2308V8.84327C13.8742 8.64933 13.7972 8.46333 13.66 8.32619C13.5229 8.18906 13.3369 8.11202 13.1429 8.11202ZM14.6054 2.26202H4.36794C3.78613 2.26202 3.22814 2.49314 2.81673 2.90455C2.40532 3.31596 2.17419 3.87395 2.17419 4.45577V14.6933C2.17419 15.2751 2.40532 15.8331 2.81673 16.2445C3.22814 16.6559 3.78613 16.887 4.36794 16.887H14.6054C15.1873 16.887 15.7453 16.6559 16.1567 16.2445C16.5681 15.8331 16.7992 15.2751 16.7992 14.6933V4.45577C16.7992 3.87395 16.5681 3.31596 16.1567 2.90455C15.7453 2.49314 15.1873 2.26202 14.6054 2.26202ZM15.3367 14.6933C15.3367 14.8872 15.2597 15.0732 15.1225 15.2103C14.9854 15.3475 14.7994 15.4245 14.6054 15.4245H4.36794C4.174 15.4245 3.98801 15.3475 3.85087 15.2103C3.71374 15.0732 3.63669 14.8872 3.63669 14.6933V4.45577C3.63669 4.26183 3.71374 4.07583 3.85087 3.93869C3.98801 3.80156 4.174 3.72452 4.36794 3.72452H14.6054C14.7994 3.72452 14.9854 3.80156 15.1225 3.93869C15.2597 4.07583 15.3367 4.26183 15.3367 4.45577V14.6933Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const DataIcon: React.FC<IconProps> = ({ onClick, color }) => (
  <svg
    width='15'
    height='15'
    viewBox='0 0 15 15'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M12.6054 7.62461H7.48669V2.50586C7.48669 2.06711 7.19419 1.77461 6.75544 1.77461C3.09919 1.77461 0.174194 4.69961 0.174194 8.35586C0.174194 12.0121 3.09919 14.9371 6.75544 14.9371C10.4117 14.9371 13.3367 12.0121 13.3367 8.35586C13.3367 7.91711 13.0442 7.62461 12.6054 7.62461ZM7.48669 13.4015C4.70794 13.8402 2.07544 11.8659 1.70982 9.08711C1.27107 6.30836 3.24544 3.67586 6.02419 3.31024V8.35586C6.02419 8.79461 6.31669 9.08711 6.75544 9.08711H11.8011C11.5086 11.354 9.75357 13.109 7.48669 13.4015ZM9.68044 0.312111C9.24169 0.312111 8.94919 0.604611 8.94919 1.04336V5.43086C8.94919 5.86961 9.24169 6.16211 9.68044 6.16211H14.0679C14.5067 6.16211 14.7992 5.86961 14.7992 5.43086C14.7992 2.57899 12.5323 0.312111 9.68044 0.312111ZM10.4117 4.69961V1.84774C11.8742 2.14024 12.9711 3.23711 13.2636 4.69961H10.4117Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const ChatIcon: React.FC<IconProps> = ({ onClick, color }) => (
  <svg
    width='15'
    height='16'
    viewBox='0 0 15 16'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M4.58231 6.99378C4.43768 6.99378 4.2963 7.03667 4.17604 7.11702C4.05579 7.19737 3.96207 7.31157 3.90672 7.44519C3.85137 7.57881 3.83689 7.72584 3.86511 7.86769C3.89332 8.00954 3.96297 8.13983 4.06523 8.2421C4.1675 8.34437 4.2978 8.41401 4.43965 8.44223C4.58149 8.47044 4.72852 8.45596 4.86214 8.40062C4.99576 8.34527 5.10997 8.25154 5.19032 8.13129C5.27067 8.01104 5.31356 7.86966 5.31356 7.72503C5.31356 7.53109 5.23651 7.34509 5.09938 7.20796C4.96224 7.07082 4.77625 6.99378 4.58231 6.99378ZM7.50731 6.99378C7.36268 6.99378 7.2213 7.03667 7.10104 7.11702C6.98079 7.19737 6.88707 7.31157 6.83172 7.44519C6.77637 7.57881 6.76189 7.72584 6.79011 7.86769C6.81832 8.00954 6.88797 8.13983 6.99023 8.2421C7.0925 8.34437 7.2228 8.41401 7.36465 8.44223C7.50649 8.47044 7.65352 8.45596 7.78714 8.40062C7.92076 8.34527 8.03497 8.25154 8.11532 8.13129C8.19567 8.01104 8.23856 7.86966 8.23856 7.72503C8.23856 7.53109 8.16151 7.34509 8.02438 7.20796C7.88724 7.07082 7.70125 6.99378 7.50731 6.99378ZM10.4323 6.99378C10.2877 6.99378 10.1463 7.03667 10.026 7.11702C9.90579 7.19737 9.81207 7.31157 9.75672 7.44519C9.70137 7.57881 9.68689 7.72584 9.71511 7.86769C9.74332 8.00954 9.81297 8.13983 9.91523 8.2421C10.0175 8.34437 10.1478 8.41401 10.2896 8.44223C10.4315 8.47044 10.5785 8.45596 10.7121 8.40062C10.8458 8.34527 10.96 8.25154 11.0403 8.13129C11.1207 8.01104 11.1636 7.86966 11.1636 7.72503C11.1636 7.53109 11.0865 7.34509 10.9494 7.20796C10.8122 7.07082 10.6262 6.99378 10.4323 6.99378ZM7.50731 0.412529C6.54701 0.412529 5.59613 0.601672 4.70893 0.96916C3.82174 1.33665 3.01562 1.87528 2.33659 2.55431C0.965227 3.92567 0.194806 5.78563 0.194806 7.72503C0.188413 9.41358 0.773073 11.0511 1.84743 12.3538L0.384931 13.8163C0.283464 13.9192 0.214729 14.0498 0.1874 14.1916C0.16007 14.3335 0.175369 14.4802 0.231368 14.6134C0.292104 14.745 0.390564 14.8555 0.51425 14.9311C0.637935 15.0066 0.781269 15.0436 0.926056 15.0375H7.50731C9.4467 15.0375 11.3067 14.2671 12.678 12.8957C14.0494 11.5244 14.8198 9.66442 14.8198 7.72503C14.8198 5.78563 14.0494 3.92567 12.678 2.55431C11.3067 1.18295 9.4467 0.412529 7.50731 0.412529ZM7.50731 13.575H2.68837L3.36843 12.895C3.43753 12.8272 3.49249 12.7465 3.53015 12.6574C3.56781 12.5682 3.5874 12.4725 3.58781 12.3758C3.58506 12.1829 3.50621 11.9989 3.36843 11.8639C2.41092 10.9075 1.81465 9.64861 1.68121 8.30183C1.54777 6.95506 1.88541 5.60368 2.63662 4.47793C3.38782 3.35218 4.5061 2.52172 5.80094 2.12802C7.09579 1.73433 8.48708 1.80176 9.73778 2.31883C10.9885 2.83591 12.0212 3.77063 12.66 4.96375C13.2988 6.15687 13.5042 7.53457 13.2411 8.86213C12.9781 10.1897 12.2628 11.385 11.2173 12.2443C10.1718 13.1037 8.86068 13.574 7.50731 13.575Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const HomeIcon: React.FC<IconProps> = ({ onClick, color }) => (
  <svg
    width='14'
    height='16'
    viewBox='0 0 14 16'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M12.6054 4.91753L8.21789 1.07115C7.81569 0.711411 7.295 0.512527 6.75539 0.512527C6.21578 0.512527 5.6951 0.711411 5.29289 1.07115L0.905392 4.91753C0.673123 5.12526 0.487775 5.38008 0.361687 5.66504C0.235599 5.95 0.171665 6.25855 0.174142 6.57015V12.9613C0.174142 13.5431 0.405268 14.1011 0.816676 14.5125C1.22808 14.9239 1.78607 15.155 2.36789 15.155H11.1429C11.7247 15.155 12.2827 14.9239 12.6941 14.5125C13.1055 14.1011 13.3366 13.5431 13.3366 12.9613V6.56284C13.3381 6.25247 13.2736 5.94533 13.1476 5.66171C13.0215 5.37808 12.8367 5.12444 12.6054 4.91753ZM8.21789 13.6925H5.29289V10.0363C5.29289 9.84234 5.36993 9.65634 5.50707 9.51921C5.64421 9.38207 5.8302 9.30503 6.02414 9.30503H7.48664C7.68058 9.30503 7.86658 9.38207 8.00371 9.51921C8.14085 9.65634 8.21789 9.84234 8.21789 10.0363V13.6925ZM11.8741 12.9613C11.8741 13.1552 11.7971 13.3412 11.66 13.4783C11.5228 13.6155 11.3368 13.6925 11.1429 13.6925H9.68039V10.0363C9.68039 9.45446 9.44926 8.89647 9.03786 8.48506C8.62645 8.07365 8.06846 7.84253 7.48664 7.84253H6.02414C5.44232 7.84253 4.88433 8.07365 4.47293 8.48506C4.06152 8.89647 3.83039 9.45446 3.83039 10.0363V13.6925H2.36789C2.17395 13.6925 1.98796 13.6155 1.85082 13.4783C1.71368 13.3412 1.63664 13.1552 1.63664 12.9613V6.56284C1.63677 6.45901 1.65901 6.35641 1.70188 6.26184C1.74475 6.16728 1.80727 6.08293 1.88527 6.0144L6.27277 2.17534C6.40621 2.05811 6.57776 1.99345 6.75539 1.99345C6.93302 1.99345 7.10457 2.05811 7.23802 2.17534L11.6255 6.0144C11.7035 6.08293 11.766 6.16728 11.8089 6.26184C11.8518 6.35641 11.874 6.45901 11.8741 6.56284V12.9613Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const ReceiptIcon2: React.FC<IconProps> = ({ onClick, color }) => (
  <svg
    width='15'
    height='16'
    viewBox='0 0 15 16'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M6.0239 4.85014H10.4114C10.6053 4.85014 10.7913 4.7731 10.9285 4.63596C11.0656 4.49883 11.1427 4.31283 11.1427 4.11889C11.1427 3.92495 11.0656 3.73895 10.9285 3.60182C10.7913 3.46468 10.6053 3.38764 10.4114 3.38764H6.0239C5.82996 3.38764 5.64397 3.46468 5.50683 3.60182C5.36969 3.73895 5.29265 3.92495 5.29265 4.11889C5.29265 4.31283 5.36969 4.49883 5.50683 4.63596C5.64397 4.7731 5.82996 4.85014 6.0239 4.85014ZM4.5614 7.77514H10.4114C10.6053 7.77514 10.7913 7.6981 10.9285 7.56096C11.0656 7.42383 11.1427 7.23783 11.1427 7.04389C11.1427 6.84995 11.0656 6.66395 10.9285 6.52682C10.7913 6.38968 10.6053 6.31264 10.4114 6.31264H4.5614C4.36746 6.31264 4.18147 6.38968 4.04433 6.52682C3.90719 6.66395 3.83015 6.84995 3.83015 7.04389C3.83015 7.23783 3.90719 7.42383 4.04433 7.56096C4.18147 7.6981 4.36746 7.77514 4.5614 7.77514ZM4.5614 10.7001H10.4114C10.6053 10.7001 10.7913 10.6231 10.9285 10.486C11.0656 10.3488 11.1427 10.1628 11.1427 9.96889C11.1427 9.77495 11.0656 9.58895 10.9285 9.45182C10.7913 9.31468 10.6053 9.23764 10.4114 9.23764H4.5614C4.36746 9.23764 4.18147 9.31468 4.04433 9.45182C3.90719 9.58895 3.83015 9.77495 3.83015 9.96889C3.83015 10.1628 3.90719 10.3488 4.04433 10.486C4.18147 10.6231 4.36746 10.7001 4.5614 10.7001ZM13.3364 0.462639H1.6364C1.44246 0.462639 1.25647 0.539681 1.11933 0.676817C0.982194 0.813953 0.905151 0.999949 0.905151 1.19389V14.3564C0.905151 14.4922 0.942968 14.6253 1.01436 14.7408C1.08576 14.8564 1.18791 14.9497 1.30938 15.0104C1.43084 15.0712 1.56682 15.0969 1.70207 15.0847C1.83732 15.0725 1.96651 15.0229 2.07515 14.9414L3.58884 13.808L5.09521 14.9414C5.22179 15.0363 5.37574 15.0876 5.53396 15.0876C5.69218 15.0876 5.84614 15.0363 5.97271 14.9414L7.4864 13.808L9.00009 14.9414C9.12667 15.0363 9.28062 15.0876 9.43884 15.0876C9.59706 15.0876 9.75101 15.0363 9.87759 14.9414L11.384 13.808L12.8977 14.9414C13.0068 15.0228 13.1365 15.072 13.2722 15.0836C13.4078 15.0953 13.544 15.0688 13.6655 15.0072C13.7861 14.9464 13.8875 14.8535 13.9585 14.7386C14.0294 14.6237 14.0672 14.4914 14.0677 14.3564V1.19389C14.0677 0.999949 13.9906 0.813953 13.8535 0.676817C13.7163 0.539681 13.5303 0.462639 13.3364 0.462639ZM12.6052 12.8939L11.8227 12.3089C11.6961 12.214 11.5422 12.1626 11.384 12.1626C11.2257 12.1626 11.0718 12.214 10.9452 12.3089L9.43884 13.4423L7.92515 12.3089C7.79858 12.214 7.64462 12.1626 7.4864 12.1626C7.32818 12.1626 7.17423 12.214 7.04765 12.3089L5.53396 13.4423L4.02759 12.3089C3.90101 12.214 3.74706 12.1626 3.58884 12.1626C3.43062 12.1626 3.27667 12.214 3.15009 12.3089L2.36765 12.8939V1.92514H12.6052V12.8939Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const PlayIcon: React.FC<IconProps> = ({ width, onClick, color }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M20.4634 7.7128L11.3634 1.0358C10.5711 0.454282 9.63311 0.103747 8.65362 0.0231148C7.67413 -0.0575172 6.69145 0.13491 5.81471 0.579028C4.93798 1.02315 4.20149 1.70158 3.68703 2.53898C3.17258 3.37638 2.90029 4.33999 2.9004 5.3228V18.6768C2.8985 19.66 3.16957 20.6244 3.68341 21.4627C4.19726 22.3009 4.9337 22.9801 5.81074 23.4245C6.68777 23.869 7.67096 24.0612 8.6508 23.9799C9.63064 23.8985 10.5687 23.5468 11.3604 22.9638L20.4654 16.2868C21.1389 15.7932 21.6867 15.1478 22.0643 14.403C22.4418 13.6582 22.6386 12.8349 22.6386 11.9998C22.6386 11.1647 22.4418 10.3414 22.0643 9.59661C21.6867 8.85179 21.1389 8.20641 20.4654 7.7128H20.4634ZM18.6894 13.8678L9.5894 20.5448C9.24415 20.7985 8.83531 20.9515 8.40832 20.9868C7.98133 21.0221 7.55292 20.9383 7.17069 20.7448C6.78845 20.5512 6.46737 20.2555 6.24312 19.8904C6.01887 19.5253 5.90024 19.1052 5.9004 18.6768V5.3228C5.89581 4.89373 6.01261 4.47211 6.23732 4.10656C6.46202 3.74101 6.78549 3.44643 7.1704 3.2568C7.49629 3.08947 7.85707 3.00142 8.2234 2.9998C8.71432 3.00222 9.1916 3.16166 9.5854 3.4548L18.6854 10.1318C18.9789 10.3469 19.2175 10.6281 19.3821 10.9527C19.5466 11.2772 19.6323 11.6359 19.6323 11.9998C19.6323 12.3637 19.5466 12.7224 19.3821 13.0469C19.2175 13.3715 18.9789 13.6527 18.6854 13.8678H18.6894Z'
      fill={color ? CSS_VARS[color] : '#374957'}
    />
  </svg>
)

export const CheckShieldIcon: React.FC<IconProps> = ({ width, onClick }) => (
  <svg
    width={width || '24'}
    height={width || '24'}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g clipPath='url(#clip0_8678_17036)'>
      <path
        d='M18.581 2.14073L12.316 0.0517291C12.1109 -0.016592 11.8891 -0.016592 11.684 0.0517291L5.419 2.14073C4.42291 2.47161 3.55642 3.10799 2.94265 3.95944C2.32887 4.81089 1.99904 5.83412 2 6.88373V12.0007C2 19.5637 11.2 23.7407 11.594 23.9147C11.7218 23.9715 11.8601 24.0009 12 24.0009C12.1399 24.0009 12.2782 23.9715 12.406 23.9147C12.8 23.7407 22 19.5637 22 12.0007V6.88373C22.001 5.83412 21.6711 4.81089 21.0574 3.95944C20.4436 3.10799 19.5771 2.47161 18.581 2.14073ZM20 12.0007C20 17.4557 13.681 21.0337 12 21.8897C10.317 21.0367 4 17.4697 4 12.0007V6.88373C4.00006 6.25401 4.19828 5.64027 4.56657 5.12947C4.93486 4.61868 5.45455 4.23672 6.052 4.03773L12 2.05473L17.948 4.03773C18.5455 4.23672 19.0651 4.61868 19.4334 5.12947C19.8017 5.64027 19.9999 6.25401 20 6.88373V12.0007Z'
        fill='#017D73'
      />
      <path
        d='M15.2998 8.30056L11.1118 12.5006L8.86779 10.1606C8.77774 10.0621 8.66889 9.98266 8.54765 9.92691C8.42642 9.87117 8.29526 9.84025 8.16189 9.83598C8.02852 9.83171 7.89565 9.85417 7.7711 9.90205C7.64655 9.94992 7.53284 10.0222 7.43666 10.1147C7.34049 10.2072 7.26381 10.3181 7.21112 10.4406C7.15844 10.5632 7.13083 10.6951 7.12991 10.8286C7.12899 10.962 7.15478 11.0943 7.20577 11.2176C7.25676 11.3409 7.33191 11.4528 7.42679 11.5466L9.73279 13.9466C9.90477 14.1323 10.1126 14.2813 10.3438 14.3844C10.575 14.4875 10.8247 14.5427 11.0778 14.5466H11.1108C11.3588 14.5474 11.6046 14.4989 11.8338 14.404C12.0629 14.3091 12.271 14.1696 12.4458 13.9936L16.7178 9.72157C16.8111 9.62846 16.8851 9.51789 16.9357 9.39616C16.9863 9.27443 17.0124 9.14394 17.0125 9.01213C17.0127 8.88031 16.9868 8.74976 16.9365 8.62793C16.8862 8.5061 16.8124 8.39537 16.7193 8.30206C16.6262 8.20876 16.5156 8.13471 16.3939 8.08414C16.2722 8.03356 16.1417 8.00746 16.0099 8.00732C15.878 8.00719 15.7475 8.03301 15.6257 8.08332C15.5038 8.13364 15.3931 8.20746 15.2998 8.30056Z'
        fill='#017D73'
      />
    </g>
    <defs>
      <clipPath id='clip0_8678_17036'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
)

export const BlockIcon: React.FC<IconProps> = ({ width, onClick }) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    xmlnsXlink='http://www.w3.org/1999/xlink'
    version='1.1'
    id='Capa_1'
    x='0px'
    y='0px'
    viewBox='0 0 512 512'
    xmlSpace='preserve'
    width={width || '24'}
    height={width || '24'}
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <g>
      <path d='M256,0C114.615,0,0,114.615,0,256s114.615,256,256,256s256-114.615,256-256C511.847,114.678,397.322,0.153,256,0z M256,64   c39.843,0.004,78.686,12.477,111.083,35.669L99.669,367.061c-61.503-86.178-41.499-205.897,44.679-267.4   C176.93,76.409,215.972,63.939,256,64z M256,448c-39.837-0.002-78.673-12.475-111.061-35.669l267.392-267.413   c61.514,86.17,41.527,205.891-44.643,267.406C335.098,435.588,296.042,448.064,256,448z' />
    </g>
  </svg>
)

export const AngleRightIcon: React.FC<IconProps & { enabled?: boolean }> = ({
  width,
  onClick,
  enabled,
}) => (
  <svg
    width={width ? width / 2 : 6}
    height={width ? width : 12}
    viewBox='0 0 6 12'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M0.15725 11.0689L4.76827 6.38424C4.97861 6.17054 4.97914 5.82999 4.76827 5.61576L0.15725 0.931149C-0.0524168 0.718136 -0.0524168 0.372773 0.15725 0.15976C0.366918 -0.0532533 0.706855 -0.0532533 0.916523 0.15976L5.52755 4.84437C6.15828 5.48517 6.15668 6.51645 5.52755 7.15563L0.916523 11.8402C0.706855 12.0533 0.366918 12.0533 0.15725 11.8402C-0.0524168 11.6272 -0.0524168 11.2819 0.15725 11.0689Z'
      fill={enabled ? '#AFB0B3' : '#343741'}
    />
  </svg>
)

export const AngleLeftIcon: React.FC<IconProps & { enabled?: boolean }> = ({
  width,
  onClick,
  enabled,
}) => (
  <svg
    width={width ? width / 2 : 6}
    height={width ? width : 12}
    viewBox='0 0 6 12'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    onClick={onClick}
    style={{ cursor: onClick ? 'pointer' : 'unset' }}
  >
    <path
      d='M5.84275 11.0689L1.23173 6.38424C1.02139 6.17054 1.02086 5.82999 1.23173 5.61576L5.84275 0.931149C6.05242 0.718136 6.05242 0.372773 5.84275 0.15976C5.63308 -0.0532533 5.29314 -0.0532533 5.08348 0.15976L0.472454 4.84437C-0.158284 5.48517 -0.156685 6.51645 0.472454 7.15563L5.08348 11.8402C5.29314 12.0533 5.63308 12.0533 5.84275 11.8402C6.05242 11.6272 6.05242 11.2819 5.84275 11.0689Z'
      fill={enabled ? '#AFB0B3' : '#343741'}
    />
  </svg>
)
